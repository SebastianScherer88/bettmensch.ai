metadata:
  creation_timestamp: 2024-05-01 11:12:13+00:00
  generate_name: set-a-coin-
  generation: 1
  labels:
    workflows.argoproj.io/creator: system-serviceaccount-argo-argo-server
  managed_fields:
  - api_version: argoproj.io/v1alpha1
    fields_type: FieldsV1
    fields_v1:
      f:metadata:
        f:generateName: {}
        f:labels:
          .: {}
          f:workflows.argoproj.io/creator: {}
      f:spec: {}
    manager: argo
    operation: Update
    time: 2024-05-01 11:12:13+00:00
  name: set-a-coin-rl4sj
  namespace: argo
  resource_version: '63522'
  uid: 59c2a783-2ed7-4ad6-b852-ad94d45dc09c
spec:
  arguments:
    parameters:
    - name: coin
  entrypoint: Coin-set
  pod_metadata:
    annotations:
      annotation_key_b: annotation_value_b
    labels:
      label_key_b: label_value_b
  templates:
  - dag:
      tasks:
      - arguments:
          parameters:
          - name: coin
            value: '{{workflow.parameters.coin}}'
        name: Set-a-coin
        template: set-coin
      - arguments:
          parameters:
          - name: coin
            value: '{{tasks.Set-a-coin.outputs.parameters.coin}}'
        depends: Set-a-coin
        name: Show-a-coin
        template: show-coin
    inputs: {}
    metadata: {}
    name: Coin-set
    outputs: {}
  - inputs:
      parameters:
      - name: coin
    metadata: {}
    name: set-coin
    outputs:
      parameters:
      - name: coin
        value_from:
          path: ./coin_output.txt
    script:
      command:
      - python
      image: python:3.8
      name: ''
      resources: {}
      source: "import os\nimport sys\nsys.path.append(os.getcwd())\nimport json\n\
        try: coin = json.loads(r'''{{inputs.parameters.coin}}''')\nexcept: coin =\
        \ r'''{{inputs.parameters.coin}}'''\n\nwith open('./coin_output.txt', 'w')\
        \ as output:\n    output.write(coin)"
  - inputs:
      parameters:
      - name: coin
    metadata: {}
    name: show-coin
    outputs: {}
    script:
      command:
      - python
      image: python:3.8
      name: ''
      resources: {}
      source: 'import os

        import sys

        sys.path.append(os.getcwd())

        import json

        try: coin = json.loads(r''''''{{inputs.parameters.coin}}'''''')

        except: coin = r''''''{{inputs.parameters.coin}}''''''


        print(f''it was {coin}'')'
  workflow_metadata:
    annotations:
      annotation_key_a: annotation_value_a
    labels:
      label_key_a: label_value_a
