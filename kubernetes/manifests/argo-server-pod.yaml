apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2024-04-30T14:46:13Z"
  generateName: argo-server-788d77f579-
  labels:
    app: argo-server
    pod-template-hash: 788d77f579
  name: argo-server-788d77f579-rjx7v
  namespace: argo
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: argo-server-788d77f579
    uid: 08d386df-0fa6-49ad-bd97-b0e07a7f3e79
  resourceVersion: "1030"
  uid: 95cbe45b-00e5-4ab2-b862-494a7e4e5321
spec:
  containers:
  - args:
    - server
    - --namespaced
    - --auth-mode
    - server
    - --auth-mode
    - client
    image: quay.io/argoproj/argocli:v3.5.6
    imagePullPolicy: IfNotPresent
    name: argo-server
    ports:
    - containerPort: 2746
      name: web
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /
        port: 2746
        scheme: HTTPS
      initialDelaySeconds: 10
      periodSeconds: 20
      successThreshold: 1
      timeoutSeconds: 1
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /tmp
      name: tmp
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-dgnxk
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: kind-control-plane
  nodeSelector:
    kubernetes.io/os: linux
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    runAsNonRoot: true
  serviceAccount: argo-server
  serviceAccountName: argo-server
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - emptyDir: {}
    name: tmp
  - name: kube-api-access-dgnxk
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2024-04-30T14:46:13Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2024-04-30T14:47:13Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2024-04-30T14:47:13Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2024-04-30T14:46:13Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: containerd://36d516935cb8c59d144f22e245259cea3ee172dd3b881365ed1a4a645e31e07d
    image: quay.io/argoproj/argocli:v3.5.6
    imageID: quay.io/argoproj/argocli@sha256:721e70b1ce7c691411a29432f1594b720e58c676453ee04d83a605e56013f259
    lastState: {}
    name: argo-server
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2024-04-30T14:46:45Z"
  hostIP: 172.18.0.2
  phase: Running
  podIP: 10.244.0.8
  podIPs:
  - ip: 10.244.0.8
  qosClass: BestEffort
  startTime: "2024-04-30T14:46:13Z"
