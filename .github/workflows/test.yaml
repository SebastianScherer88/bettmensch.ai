on:
  workflow_call:
    inputs:
      test-suite:
        default: "unit" # "integration", "k8s"
        required: true
        type: string
        description: The test suite to run
      test-flags:
        default: "" # for the k8s test suite: "-m standard", "-m ddp" etc
        required: false
        type: string 
        description: Optional pytest flags populating the `PYTEST_FLAGS` argument of the `sdk.test` make target.
      python-version:
        default: "3.10" # "3.11"
        required: false
        type: string
        description: The python version that the sdk will be installed with.
      deprovision-when-finished:
        default: "false"
        required: false
        type: string
        description: Whether to deprovision the platfrom after testing has finished, pass or fail. Only considered if the test suite is 'k8s'.
    secrets:
      AWS_ACCESS_KEY_ID:
        required: false
      AWS_SECRET_ACCESS_KEY:
        required: false
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Set Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 10

      - uses: actions/checkout@v4

      - name: Configure AWS Credentials
        if: ${{ inputs.test-suite == 'k8s' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Install terraform
        if: ${{ inputs.test-suite == 'k8s' }}
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.9.8"

      - name: Bring up platform
        if: ${{ inputs.test-suite == 'k8s' }}
        run: make platform.up
        
      - name: Connect to platform
        if: ${{ inputs.test-suite == 'k8s' }}
        run: make platform.connect

      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      
      - name: Setup sdk installation tools
        run: pip install setuptools
      
      - name: Install sdk
        run: make sdk.install EXTRAS=test
      
      - name: Run test suite
        run: make sdk.test SUITE="${{ inputs.test-suite }}" PYTEST_FLAGS="${{ inputs.test-flags }}"

      - name: Tear down platform (optional)
        if: ${{ (success() || failure()) && (inputs.test-suite == 'k8s') && (inputs.deprovision-when-finished == 'true') }}
        run: make platform.init && make platform.down