{'items': [{'metadata': {'annotations': {'workflows.argoproj.io/pod-name-format': 'v2'},
                         'creation_timestamp': datetime.datetime(2024, 4, 30, 23, 30, 48, tzinfo=tzutc()),
                         'generate_name': 'set-a-coin-from-template-',
                         'generation': 4,
                         'labels': {'workflows.argoproj.io/completed': 'true',
                                    'workflows.argoproj.io/creator': 'system-serviceaccount-argo-argo-server',
                                    'workflows.argoproj.io/phase': 'Succeeded'},
                         'managed_fields': [{'api_version': 'argoproj.io/v1alpha1',
                                             'fields_type': 'FieldsV1',
                                             'fields_v1': {'f:metadata': {'f:generateName': {},
                                                                          'f:labels': {'.': {},
                                                                                       'f:workflows.argoproj.io/creator': {}}},
                                                           'f:spec': {}},
                                             'manager': 'argo',
                                             'operation': 'Update',
                                             'time': datetime.datetime(2024, 4, 30, 23, 30, 48, tzinfo=tzutc())},
                                            {'api_version': 'argoproj.io/v1alpha1',
                                             'fields_type': 'FieldsV1',
                                             'fields_v1': {'f:metadata': {'f:annotations': {'.': {},
                                                                                            'f:workflows.argoproj.io/pod-name-format': {}},
                                                                          'f:labels': {'f:workflows.argoproj.io/completed': {},
                                                                                       'f:workflows.argoproj.io/phase': {}}},
                                                           'f:status': {}},
                                             'manager': 'workflow-controller',
                                             'operation': 'Update',
                                             'time': datetime.datetime(2024, 4, 30, 23, 31, 8, tzinfo=tzutc())}],
                         'name': 'set-a-coin-from-template-4w42p',
                         'namespace': 'argo',
                         'resource_version': '49326',
                         'uid': 'cf70d3e4-7d75-469a-b1f8-56153f328117'},
            'spec': {'arguments': {'parameters': [{'name': 'coin',
                                                   'value': 'new coin'}]},
                     'workflow_template_ref': {'name': 'set-a-coin-wctkq'}},
            'status': {'artifact_gc_status': {'not_specified': True},
                       'artifact_repository_ref': {'artifact_repository': {'archive_logs': True,
                                                                           's3': {'access_key_secret': {'key': 'accesskey',
                                                                                                        'name': 'my-minio-cred'},
                                                                                  'bucket': 'my-bucket',
                                                                                  'endpoint': 'minio:9000',
                                                                                  'insecure': True,
                                                                                  'secret_key_secret': {'key': 'secretkey',
                                                                                                        'name': 'my-minio-cred'}}},
                                                   'config_map': 'artifact-repositories',
                                                   'key': 'default-v1',
                                                   'namespace': 'argo'},
                       'conditions': [{'status': 'False', 'type': 'PodRunning'},
                                      {'status': 'True', 'type': 'Completed'}],
                       'finished_at': datetime.datetime(2024, 4, 30, 23, 31, 8, tzinfo=tzutc()),
                       'nodes': {'set-a-coin-from-template-4w42p': {'children': ['set-a-coin-from-template-4w42p-2241922945'],
                                                                    'display_name': 'set-a-coin-from-template-4w42p',
                                                                    'finished_at': datetime.datetime(2024, 4, 30, 23, 31, 8, tzinfo=tzutc()),
                                                                    'id': 'set-a-coin-from-template-4w42p',
                                                                    'name': 'set-a-coin-from-template-4w42p',
                                                                    'outbound_nodes': ['set-a-coin-from-template-4w42p-2145537176'],
                                                                    'phase': 'Succeeded',
                                                                    'progress': '2/2',
                                                                    'resources_duration': {'cpu': 0,
                                                                                           'memory': 4},
                                                                    'started_at': datetime.datetime(2024, 4, 30, 23, 30, 48, tzinfo=tzutc()),
                                                                    'template_name': 'Coin-set',
                                                                    'template_scope': 'local/',
                                                                    'type': 'DAG'},
                                 'set-a-coin-from-template-4w42p-2145537176': {'boundary_id': 'set-a-coin-from-template-4w42p',
                                                                               'display_name': 'Show-a-coin',
                                                                               'finished_at': datetime.datetime(2024, 4, 30, 23, 31, 2, tzinfo=tzutc()),
                                                                               'host_node_name': 'kind-control-plane',
                                                                               'id': 'set-a-coin-from-template-4w42p-2145537176',
                                                                               'inputs': {'parameters': [{'name': 'coin',
                                                                                                          'value': 'new '
                                                                                                                   'coin'}]},
                                                                               'name': 'set-a-coin-from-template-4w42p.Show-a-coin',
                                                                               'outputs': {'artifacts': [{'name': 'main-logs',
                                                                                                          's3': {'key': 'set-a-coin-from-template-4w42p/set-a-coin-from-template-4w42p-show-coin-2145537176/main.log'}}],
                                                                                           'exit_code': '0'},
                                                                               'phase': 'Succeeded',
                                                                               'progress': '1/1',
                                                                               'resources_duration': {'cpu': 0,
                                                                                                      'memory': 2},
                                                                               'started_at': datetime.datetime(2024, 4, 30, 23, 30, 58, tzinfo=tzutc()),
                                                                               'template_name': 'show-coin',
                                                                               'template_scope': 'local/',
                                                                               'type': 'Pod'},
                                 'set-a-coin-from-template-4w42p-2241922945': {'boundary_id': 'set-a-coin-from-template-4w42p',
                                                                               'children': ['set-a-coin-from-template-4w42p-2145537176'],
                                                                               'display_name': 'Set-a-coin',
                                                                               'finished_at': datetime.datetime(2024, 4, 30, 23, 30, 52, tzinfo=tzutc()),
                                                                               'host_node_name': 'kind-control-plane',
                                                                               'id': 'set-a-coin-from-template-4w42p-2241922945',
                                                                               'inputs': {'parameters': [{'name': 'coin',
                                                                                                          'value': 'new '
                                                                                                                   'coin'}]},
                                                                               'name': 'set-a-coin-from-template-4w42p.Set-a-coin',
                                                                               'outputs': {'artifacts': [{'name': 'main-logs',
                                                                                                          's3': {'key': 'set-a-coin-from-template-4w42p/set-a-coin-from-template-4w42p-set-coin-2241922945/main.log'}}],
                                                                                           'exit_code': '0',
                                                                                           'parameters': [{'name': 'coin',
                                                                                                           'value': 'new '
                                                                                                                    'coin',
                                                                                                           'value_from': {'path': './coin_output.txt'}}]},
                                                                               'phase': 'Succeeded',
                                                                               'progress': '1/1',
                                                                               'resources_duration': {'cpu': 0,
                                                                                                      'memory': 2},
                                                                               'started_at': datetime.datetime(2024, 4, 30, 23, 30, 48, tzinfo=tzutc()),
                                                                               'template_name': 'set-coin',
                                                                               'template_scope': 'local/',
                                                                               'type': 'Pod'}},
                       'phase': 'Succeeded',
                       'progress': '2/2',
                       'resources_duration': {'cpu': 0, 'memory': 4},
                       'started_at': datetime.datetime(2024, 4, 30, 23, 30, 48, tzinfo=tzutc()),
                       'stored_templates': {'namespaced/set-a-coin-wctkq/Coin-set': {'dag': {'tasks': [{'arguments': {'parameters': [{'name': 'coin',
                                                                                                                                      'value': '{{workflow.parameters.coin}}'}]},
                                                                                                        'name': 'Set-a-coin',
                                                                                                        'template': 'set-coin'},
                                                                                                       {'arguments': {'parameters': [{'name': 'coin',
                                                                                                                                      'value': '{{tasks.Set-a-coin.outputs.parameters.coin}}'}]},
                                                                                                        'depends': 'Set-a-coin',
                                                                                                        'name': 'Show-a-coin',
                                                                                                        'template': 'show-coin'}]},
                                                                                     'inputs': {},
                                                                                     'metadata': {},
                                                                                     'name': 'Coin-set',
                                                                                     'outputs': {}},
                                            'namespaced/set-a-coin-wctkq/set-coin': {'inputs': {'parameters': [{'name': 'coin'}]},
                                                                                     'metadata': {},
                                                                                     'name': 'set-coin',
                                                                                     'outputs': {'parameters': [{'name': 'coin',
                                                                                                                 'value_from': {'path': './coin_output.txt'}}]},
                                                                                     'script': {'command': ['python'],
                                                                                                'image': 'python:3.8',
                                                                                                'name': '',
                                                                                                'resources': {},
                                                                                                'source': 'import '
                                                                                                          'os\n'
                                                                                                          'import '
                                                                                                          'sys\n'
                                                                                                          'sys.path.append(os.getcwd())\n'
                                                                                                          'import '
                                                                                                          'json\n'
                                                                                                          'try: '
                                                                                                          'coin '
                                                                                                          '= '
                                                                                                          "json.loads(r'''{{inputs.parameters.coin}}''')\n"
                                                                                                          'except: '
                                                                                                          'coin '
                                                                                                          '= '
                                                                                                          "r'''{{inputs.parameters.coin}}'''\n"
                                                                                                          '\n'
                                                                                                          'with '
                                                                                                          "open('./coin_output.txt', "
                                                                                                          "'w') "
                                                                                                          'as '
                                                                                                          'output:\n'
                                                                                                          '    '
                                                                                                          'output.write(coin)'}},
                                            'namespaced/set-a-coin-wctkq/show-coin': {'inputs': {'parameters': [{'name': 'coin'}]},
                                                                                      'metadata': {},
                                                                                      'name': 'show-coin',
                                                                                      'outputs': {},
                                                                                      'script': {'command': ['python'],
                                                                                                 'image': 'python:3.8',
                                                                                                 'name': '',
                                                                                                 'resources': {},
                                                                                                 'source': 'import '
                                                                                                           'os\n'
                                                                                                           'import '
                                                                                                           'sys\n'
                                                                                                           'sys.path.append(os.getcwd())\n'
                                                                                                           'import '
                                                                                                           'json\n'
                                                                                                           'try: '
                                                                                                           'coin '
                                                                                                           '= '
                                                                                                           "json.loads(r'''{{inputs.parameters.coin}}''')\n"
                                                                                                           'except: '
                                                                                                           'coin '
                                                                                                           '= '
                                                                                                           "r'''{{inputs.parameters.coin}}'''\n"
                                                                                                           '\n'
                                                                                                           "print(f'it "
                                                                                                           'was '
                                                                                                           "{coin}')"}}},
                       'stored_workflow_template_spec': {'arguments': {'parameters': [{'name': 'coin',
                                                                                       'value': 'new '
                                                                                                'coin'}]},
                                                         'entrypoint': 'Coin-set',
                                                         'templates': [{'dag': {'tasks': [{'arguments': {'parameters': [{'name': 'coin',
                                                                                                                         'value': '{{workflow.parameters.coin}}'}]},
                                                                                           'name': 'Set-a-coin',
                                                                                           'template': 'set-coin'},
                                                                                          {'arguments': {'parameters': [{'name': 'coin',
                                                                                                                         'value': '{{tasks.Set-a-coin.outputs.parameters.coin}}'}]},
                                                                                           'depends': 'Set-a-coin',
                                                                                           'name': 'Show-a-coin',
                                                                                           'template': 'show-coin'}]},
                                                                        'inputs': {},
                                                                        'metadata': {},
                                                                        'name': 'Coin-set',
                                                                        'outputs': {}},
                                                                       {'inputs': {'parameters': [{'name': 'coin'}]},
                                                                        'metadata': {},
                                                                        'name': 'set-coin',
                                                                        'outputs': {'parameters': [{'name': 'coin',
                                                                                                    'value_from': {'path': './coin_output.txt'}}]},
                                                                        'script': {'command': ['python'],
                                                                                   'image': 'python:3.8',
                                                                                   'name': '',
                                                                                   'resources': {},
                                                                                   'source': 'import '
                                                                                             'os\n'
                                                                                             'import '
                                                                                             'sys\n'
                                                                                             'sys.path.append(os.getcwd())\n'
                                                                                             'import '
                                                                                             'json\n'
                                                                                             'try: '
                                                                                             'coin '
                                                                                             '= '
                                                                                             "json.loads(r'''{{inputs.parameters.coin}}''')\n"
                                                                                             'except: '
                                                                                             'coin '
                                                                                             '= '
                                                                                             "r'''{{inputs.parameters.coin}}'''\n"
                                                                                             '\n'
                                                                                             'with '
                                                                                             "open('./coin_output.txt', "
                                                                                             "'w') "
                                                                                             'as '
                                                                                             'output:\n'
                                                                                             '    '
                                                                                             'output.write(coin)'}},
                                                                       {'inputs': {'parameters': [{'name': 'coin'}]},
                                                                        'metadata': {},
                                                                        'name': 'show-coin',
                                                                        'outputs': {},
                                                                        'script': {'command': ['python'],
                                                                                   'image': 'python:3.8',
                                                                                   'name': '',
                                                                                   'resources': {},
                                                                                   'source': 'import '
                                                                                             'os\n'
                                                                                             'import '
                                                                                             'sys\n'
                                                                                             'sys.path.append(os.getcwd())\n'
                                                                                             'import '
                                                                                             'json\n'
                                                                                             'try: '
                                                                                             'coin '
                                                                                             '= '
                                                                                             "json.loads(r'''{{inputs.parameters.coin}}''')\n"
                                                                                             'except: '
                                                                                             'coin '
                                                                                             '= '
                                                                                             "r'''{{inputs.parameters.coin}}'''\n"
                                                                                             '\n'
                                                                                             "print(f'it "
                                                                                             'was '
                                                                                             "{coin}')"}}],
                                                         'workflow_template_ref': {'name': 'set-a-coin-wctkq'}},
                       'task_results_completion_status': {'set-a-coin-from-template-4w42p-2145537176': True,
                                                          'set-a-coin-from-template-4w42p-2241922945': True}}},
           {'metadata': {'annotations': {'workflows.argoproj.io/pod-name-format': 'v2'},
                         'creation_timestamp': datetime.datetime(2024, 4, 30, 23, 19, 8, tzinfo=tzutc()),
                         'generate_name': 'set-a-coin-from-template-',
                         'generation': 4,
                         'labels': {'workflows.argoproj.io/completed': 'true',
                                    'workflows.argoproj.io/creator': 'system-serviceaccount-argo-argo-server',
                                    'workflows.argoproj.io/phase': 'Succeeded'},
                         'managed_fields': [{'api_version': 'argoproj.io/v1alpha1',
                                             'fields_type': 'FieldsV1',
                                             'fields_v1': {'f:metadata': {'f:generateName': {},
                                                                          'f:labels': {'.': {},
                                                                                       'f:workflows.argoproj.io/creator': {}}},
                                                           'f:spec': {}},
                                             'manager': 'argo',
                                             'operation': 'Update',
                                             'time': datetime.datetime(2024, 4, 30, 23, 19, 8, tzinfo=tzutc())},
                                            {'api_version': 'argoproj.io/v1alpha1',
                                             'fields_type': 'FieldsV1',
                                             'fields_v1': {'f:metadata': {'f:annotations': {'.': {},
                                                                                            'f:workflows.argoproj.io/pod-name-format': {}},
                                                                          'f:labels': {'f:workflows.argoproj.io/completed': {},
                                                                                       'f:workflows.argoproj.io/phase': {}}},
                                                           'f:status': {}},
                                             'manager': 'workflow-controller',
                                             'operation': 'Update',
                                             'time': datetime.datetime(2024, 4, 30, 23, 19, 28, tzinfo=tzutc())}],
                         'name': 'set-a-coin-from-template-4qd5q',
                         'namespace': 'argo',
                         'resource_version': '48216',
                         'uid': 'fd6d25b4-14c4-470f-882b-c5b4d81b7894'},
            'spec': {'arguments': {'parameters': [{'name': 'coin',
                                                   'value': 'new coin'}]},
                     'workflow_template_ref': {'name': 'set-a-coin-wctkq'}},
            'status': {'artifact_gc_status': {'not_specified': True},
                       'artifact_repository_ref': {'artifact_repository': {'archive_logs': True,
                                                                           's3': {'access_key_secret': {'key': 'accesskey',
                                                                                                        'name': 'my-minio-cred'},
                                                                                  'bucket': 'my-bucket',
                                                                                  'endpoint': 'minio:9000',
                                                                                  'insecure': True,
                                                                                  'secret_key_secret': {'key': 'secretkey',
                                                                                                        'name': 'my-minio-cred'}}},
                                                   'config_map': 'artifact-repositories',
                                                   'key': 'default-v1',
                                                   'namespace': 'argo'},
                       'conditions': [{'status': 'False', 'type': 'PodRunning'},
                                      {'status': 'True', 'type': 'Completed'}],
                       'finished_at': datetime.datetime(2024, 4, 30, 23, 19, 28, tzinfo=tzutc()),
                       'nodes': {'set-a-coin-from-template-4qd5q': {'children': ['set-a-coin-from-template-4qd5q-1669668419'],
                                                                    'display_name': 'set-a-coin-from-template-4qd5q',
                                                                    'finished_at': datetime.datetime(2024, 4, 30, 23, 19, 28, tzinfo=tzutc()),
                                                                    'id': 'set-a-coin-from-template-4qd5q',
                                                                    'name': 'set-a-coin-from-template-4qd5q',
                                                                    'outbound_nodes': ['set-a-coin-from-template-4qd5q-335757878'],
                                                                    'phase': 'Succeeded',
                                                                    'progress': '2/2',
                                                                    'resources_duration': {'cpu': 0,
                                                                                           'memory': 4},
                                                                    'started_at': datetime.datetime(2024, 4, 30, 23, 19, 8, tzinfo=tzutc()),
                                                                    'template_name': 'Coin-set',
                                                                    'template_scope': 'local/',
                                                                    'type': 'DAG'},
                                 'set-a-coin-from-template-4qd5q-1669668419': {'boundary_id': 'set-a-coin-from-template-4qd5q',
                                                                               'children': ['set-a-coin-from-template-4qd5q-335757878'],
                                                                               'display_name': 'Set-a-coin',
                                                                               'finished_at': datetime.datetime(2024, 4, 30, 23, 19, 12, tzinfo=tzutc()),
                                                                               'host_node_name': 'kind-control-plane',
                                                                               'id': 'set-a-coin-from-template-4qd5q-1669668419',
                                                                               'inputs': {'parameters': [{'name': 'coin',
                                                                                                          'value': 'new '
                                                                                                                   'coin'}]},
                                                                               'name': 'set-a-coin-from-template-4qd5q.Set-a-coin',
                                                                               'outputs': {'artifacts': [{'name': 'main-logs',
                                                                                                          's3': {'key': 'set-a-coin-from-template-4qd5q/set-a-coin-from-template-4qd5q-set-coin-1669668419/main.log'}}],
                                                                                           'exit_code': '0',
                                                                                           'parameters': [{'name': 'coin',
                                                                                                           'value': 'new '
                                                                                                                    'coin',
                                                                                                           'value_from': {'path': './coin_output.txt'}}]},
                                                                               'phase': 'Succeeded',
                                                                               'progress': '1/1',
                                                                               'resources_duration': {'cpu': 0,
                                                                                                      'memory': 2},
                                                                               'started_at': datetime.datetime(2024, 4, 30, 23, 19, 8, tzinfo=tzutc()),
                                                                               'template_name': 'set-coin',
                                                                               'template_scope': 'local/',
                                                                               'type': 'Pod'},
                                 'set-a-coin-from-template-4qd5q-335757878': {'boundary_id': 'set-a-coin-from-template-4qd5q',
                                                                              'display_name': 'Show-a-coin',
                                                                              'finished_at': datetime.datetime(2024, 4, 30, 23, 19, 23, tzinfo=tzutc()),
                                                                              'host_node_name': 'kind-control-plane',
                                                                              'id': 'set-a-coin-from-template-4qd5q-335757878',
                                                                              'inputs': {'parameters': [{'name': 'coin',
                                                                                                         'value': 'new '
                                                                                                                  'coin'}]},
                                                                              'name': 'set-a-coin-from-template-4qd5q.Show-a-coin',
                                                                              'outputs': {'artifacts': [{'name': 'main-logs',
                                                                                                         's3': {'key': 'set-a-coin-from-template-4qd5q/set-a-coin-from-template-4qd5q-show-coin-335757878/main.log'}}],
                                                                                          'exit_code': '0'},
                                                                              'phase': 'Succeeded',
                                                                              'progress': '1/1',
                                                                              'resources_duration': {'cpu': 0,
                                                                                                     'memory': 2},
                                                                              'started_at': datetime.datetime(2024, 4, 30, 23, 19, 18, tzinfo=tzutc()),
                                                                              'template_name': 'show-coin',
                                                                              'template_scope': 'local/',
                                                                              'type': 'Pod'}},
                       'phase': 'Succeeded',
                       'progress': '2/2',
                       'resources_duration': {'cpu': 0, 'memory': 4},
                       'started_at': datetime.datetime(2024, 4, 30, 23, 19, 8, tzinfo=tzutc()),
                       'stored_templates': {'namespaced/set-a-coin-wctkq/Coin-set': {'dag': {'tasks': [{'arguments': {'parameters': [{'name': 'coin',
                                                                                                                                      'value': '{{workflow.parameters.coin}}'}]},
                                                                                                        'name': 'Set-a-coin',
                                                                                                        'template': 'set-coin'},
                                                                                                       {'arguments': {'parameters': [{'name': 'coin',
                                                                                                                                      'value': '{{tasks.Set-a-coin.outputs.parameters.coin}}'}]},
                                                                                                        'depends': 'Set-a-coin',
                                                                                                        'name': 'Show-a-coin',
                                                                                                        'template': 'show-coin'}]},
                                                                                     'inputs': {},
                                                                                     'metadata': {},
                                                                                     'name': 'Coin-set',
                                                                                     'outputs': {}},
                                            'namespaced/set-a-coin-wctkq/set-coin': {'inputs': {'parameters': [{'name': 'coin'}]},
                                                                                     'metadata': {},
                                                                                     'name': 'set-coin',
                                                                                     'outputs': {'parameters': [{'name': 'coin',
                                                                                                                 'value_from': {'path': './coin_output.txt'}}]},
                                                                                     'script': {'command': ['python'],
                                                                                                'image': 'python:3.8',
                                                                                                'name': '',
                                                                                                'resources': {},
                                                                                                'source': 'import '
                                                                                                          'os\n'
                                                                                                          'import '
                                                                                                          'sys\n'
                                                                                                          'sys.path.append(os.getcwd())\n'
                                                                                                          'import '
                                                                                                          'json\n'
                                                                                                          'try: '
                                                                                                          'coin '
                                                                                                          '= '
                                                                                                          "json.loads(r'''{{inputs.parameters.coin}}''')\n"
                                                                                                          'except: '
                                                                                                          'coin '
                                                                                                          '= '
                                                                                                          "r'''{{inputs.parameters.coin}}'''\n"
                                                                                                          '\n'
                                                                                                          'with '
                                                                                                          "open('./coin_output.txt', "
                                                                                                          "'w') "
                                                                                                          'as '
                                                                                                          'output:\n'
                                                                                                          '    '
                                                                                                          'output.write(coin)'}},
                                            'namespaced/set-a-coin-wctkq/show-coin': {'inputs': {'parameters': [{'name': 'coin'}]},
                                                                                      'metadata': {},
                                                                                      'name': 'show-coin',
                                                                                      'outputs': {},
                                                                                      'script': {'command': ['python'],
                                                                                                 'image': 'python:3.8',
                                                                                                 'name': '',
                                                                                                 'resources': {},
                                                                                                 'source': 'import '
                                                                                                           'os\n'
                                                                                                           'import '
                                                                                                           'sys\n'
                                                                                                           'sys.path.append(os.getcwd())\n'
                                                                                                           'import '
                                                                                                           'json\n'
                                                                                                           'try: '
                                                                                                           'coin '
                                                                                                           '= '
                                                                                                           "json.loads(r'''{{inputs.parameters.coin}}''')\n"
                                                                                                           'except: '
                                                                                                           'coin '
                                                                                                           '= '
                                                                                                           "r'''{{inputs.parameters.coin}}'''\n"
                                                                                                           '\n'
                                                                                                           "print(f'it "
                                                                                                           'was '
                                                                                                           "{coin}')"}}},
                       'stored_workflow_template_spec': {'arguments': {'parameters': [{'name': 'coin',
                                                                                       'value': 'new '
                                                                                                'coin'}]},
                                                         'entrypoint': 'Coin-set',
                                                         'templates': [{'dag': {'tasks': [{'arguments': {'parameters': [{'name': 'coin',
                                                                                                                         'value': '{{workflow.parameters.coin}}'}]},
                                                                                           'name': 'Set-a-coin',
                                                                                           'template': 'set-coin'},
                                                                                          {'arguments': {'parameters': [{'name': 'coin',
                                                                                                                         'value': '{{tasks.Set-a-coin.outputs.parameters.coin}}'}]},
                                                                                           'depends': 'Set-a-coin',
                                                                                           'name': 'Show-a-coin',
                                                                                           'template': 'show-coin'}]},
                                                                        'inputs': {},
                                                                        'metadata': {},
                                                                        'name': 'Coin-set',
                                                                        'outputs': {}},
                                                                       {'inputs': {'parameters': [{'name': 'coin'}]},
                                                                        'metadata': {},
                                                                        'name': 'set-coin',
                                                                        'outputs': {'parameters': [{'name': 'coin',
                                                                                                    'value_from': {'path': './coin_output.txt'}}]},
                                                                        'script': {'command': ['python'],
                                                                                   'image': 'python:3.8',
                                                                                   'name': '',
                                                                                   'resources': {},
                                                                                   'source': 'import '
                                                                                             'os\n'
                                                                                             'import '
                                                                                             'sys\n'
                                                                                             'sys.path.append(os.getcwd())\n'
                                                                                             'import '
                                                                                             'json\n'
                                                                                             'try: '
                                                                                             'coin '
                                                                                             '= '
                                                                                             "json.loads(r'''{{inputs.parameters.coin}}''')\n"
                                                                                             'except: '
                                                                                             'coin '
                                                                                             '= '
                                                                                             "r'''{{inputs.parameters.coin}}'''\n"
                                                                                             '\n'
                                                                                             'with '
                                                                                             "open('./coin_output.txt', "
                                                                                             "'w') "
                                                                                             'as '
                                                                                             'output:\n'
                                                                                             '    '
                                                                                             'output.write(coin)'}},
                                                                       {'inputs': {'parameters': [{'name': 'coin'}]},
                                                                        'metadata': {},
                                                                        'name': 'show-coin',
                                                                        'outputs': {},
                                                                        'script': {'command': ['python'],
                                                                                   'image': 'python:3.8',
                                                                                   'name': '',
                                                                                   'resources': {},
                                                                                   'source': 'import '
                                                                                             'os\n'
                                                                                             'import '
                                                                                             'sys\n'
                                                                                             'sys.path.append(os.getcwd())\n'
                                                                                             'import '
                                                                                             'json\n'
                                                                                             'try: '
                                                                                             'coin '
                                                                                             '= '
                                                                                             "json.loads(r'''{{inputs.parameters.coin}}''')\n"
                                                                                             'except: '
                                                                                             'coin '
                                                                                             '= '
                                                                                             "r'''{{inputs.parameters.coin}}'''\n"
                                                                                             '\n'
                                                                                             "print(f'it "
                                                                                             'was '
                                                                                             "{coin}')"}}],
                                                         'workflow_template_ref': {'name': 'set-a-coin-wctkq'}},
                       'task_results_completion_status': {'set-a-coin-from-template-4qd5q-1669668419': True,
                                                          'set-a-coin-from-template-4qd5q-335757878': True}}},
           {'metadata': {'annotations': {'workflows.argoproj.io/pod-name-format': 'v2'},
                         'creation_timestamp': datetime.datetime(2024, 4, 30, 23, 3, 26, tzinfo=tzutc()),
                         'generate_name': 'set-a-coin-',
                         'generation': 4,
                         'labels': {'workflows.argoproj.io/completed': 'true',
                                    'workflows.argoproj.io/creator': 'system-serviceaccount-argo-argo-server',
                                    'workflows.argoproj.io/phase': 'Succeeded'},
                         'managed_fields': [{'api_version': 'argoproj.io/v1alpha1',
                                             'fields_type': 'FieldsV1',
                                             'fields_v1': {'f:metadata': {'f:generateName': {},
                                                                          'f:labels': {'.': {},
                                                                                       'f:workflows.argoproj.io/creator': {}}},
                                                           'f:spec': {}},
                                             'manager': 'argo',
                                             'operation': 'Update',
                                             'time': datetime.datetime(2024, 4, 30, 23, 3, 26, tzinfo=tzutc())},
                                            {'api_version': 'argoproj.io/v1alpha1',
                                             'fields_type': 'FieldsV1',
                                             'fields_v1': {'f:metadata': {'f:annotations': {'.': {},
                                                                                            'f:workflows.argoproj.io/pod-name-format': {}},
                                                                          'f:labels': {'f:workflows.argoproj.io/completed': {},
                                                                                       'f:workflows.argoproj.io/phase': {}}},
                                                           'f:status': {}},
                                             'manager': 'workflow-controller',
                                             'operation': 'Update',
                                             'time': datetime.datetime(2024, 4, 30, 23, 3, 46, tzinfo=tzutc())}],
                         'name': 'set-a-coin-c4djv',
                         'namespace': 'argo',
                         'resource_version': '46738',
                         'uid': '4654934c-d58d-45dd-987e-db65ca3b5b67'},
            'spec': {'arguments': {'parameters': [{'name': 'coin',
                                                   'value': 'heads'}]},
                     'entrypoint': 'Coin-set',
                     'templates': [{'dag': {'tasks': [{'arguments': {'parameters': [{'name': 'coin',
                                                                                     'value': '{{workflow.parameters.coin}}'}]},
                                                       'name': 'Set-a-coin',
                                                       'template': 'set-coin'},
                                                      {'arguments': {'parameters': [{'name': 'coin',
                                                                                     'value': '{{tasks.Set-a-coin.outputs.parameters.coin}}'}]},
                                                       'depends': 'Set-a-coin',
                                                       'name': 'Show-a-coin',
                                                       'template': 'show-coin'}]},
                                    'inputs': {},
                                    'metadata': {},
                                    'name': 'Coin-set',
                                    'outputs': {}},
                                   {'inputs': {'parameters': [{'name': 'coin'}]},
                                    'metadata': {},
                                    'name': 'set-coin',
                                    'outputs': {'parameters': [{'name': 'coin',
                                                                'value_from': {'path': './coin_output.txt'}}]},
                                    'script': {'command': ['python'],
                                               'image': 'python:3.8',
                                               'name': '',
                                               'resources': {},
                                               'source': 'import os\n'
                                                         'import sys\n'
                                                         'sys.path.append(os.getcwd())\n'
                                                         'import json\n'
                                                         'try: coin = '
                                                         "json.loads(r'''{{inputs.parameters.coin}}''')\n"
                                                         'except: coin = '
                                                         "r'''{{inputs.parameters.coin}}'''\n"
                                                         '\n'
                                                         'with '
                                                         "open('./coin_output.txt', "
                                                         "'w') as output:\n"
                                                         '    '
                                                         'output.write(coin)'}},
                                   {'inputs': {'parameters': [{'name': 'coin'}]},
                                    'metadata': {},
                                    'name': 'show-coin',
                                    'outputs': {},
                                    'script': {'command': ['python'],
                                               'image': 'python:3.8',
                                               'name': '',
                                               'resources': {},
                                               'source': 'import os\n'
                                                         'import sys\n'
                                                         'sys.path.append(os.getcwd())\n'
                                                         'import json\n'
                                                         'try: coin = '
                                                         "json.loads(r'''{{inputs.parameters.coin}}''')\n"
                                                         'except: coin = '
                                                         "r'''{{inputs.parameters.coin}}'''\n"
                                                         '\n'
                                                         "print(f'it was "
                                                         "{coin}')"}}]},
            'status': {'artifact_gc_status': {'not_specified': True},
                       'artifact_repository_ref': {'artifact_repository': {'archive_logs': True,
                                                                           's3': {'access_key_secret': {'key': 'accesskey',
                                                                                                        'name': 'my-minio-cred'},
                                                                                  'bucket': 'my-bucket',
                                                                                  'endpoint': 'minio:9000',
                                                                                  'insecure': True,
                                                                                  'secret_key_secret': {'key': 'secretkey',
                                                                                                        'name': 'my-minio-cred'}}},
                                                   'config_map': 'artifact-repositories',
                                                   'key': 'default-v1',
                                                   'namespace': 'argo'},
                       'conditions': [{'status': 'False', 'type': 'PodRunning'},
                                      {'status': 'True', 'type': 'Completed'}],
                       'finished_at': datetime.datetime(2024, 4, 30, 23, 3, 46, tzinfo=tzutc()),
                       'nodes': {'set-a-coin-c4djv': {'children': ['set-a-coin-c4djv-1345665593'],
                                                      'display_name': 'set-a-coin-c4djv',
                                                      'finished_at': datetime.datetime(2024, 4, 30, 23, 3, 46, tzinfo=tzutc()),
                                                      'id': 'set-a-coin-c4djv',
                                                      'name': 'set-a-coin-c4djv',
                                                      'outbound_nodes': ['set-a-coin-c4djv-1931323328'],
                                                      'phase': 'Succeeded',
                                                      'progress': '2/2',
                                                      'resources_duration': {'cpu': 0,
                                                                             'memory': 4},
                                                      'started_at': datetime.datetime(2024, 4, 30, 23, 3, 26, tzinfo=tzutc()),
                                                      'template_name': 'Coin-set',
                                                      'template_scope': 'local/set-a-coin-c4djv',
                                                      'type': 'DAG'},
                                 'set-a-coin-c4djv-1345665593': {'boundary_id': 'set-a-coin-c4djv',
                                                                 'children': ['set-a-coin-c4djv-1931323328'],
                                                                 'display_name': 'Set-a-coin',
                                                                 'finished_at': datetime.datetime(2024, 4, 30, 23, 3, 31, tzinfo=tzutc()),
                                                                 'host_node_name': 'kind-control-plane',
                                                                 'id': 'set-a-coin-c4djv-1345665593',
                                                                 'inputs': {'parameters': [{'name': 'coin',
                                                                                            'value': 'heads'}]},
                                                                 'name': 'set-a-coin-c4djv.Set-a-coin',
                                                                 'outputs': {'artifacts': [{'name': 'main-logs',
                                                                                            's3': {'key': 'set-a-coin-c4djv/set-a-coin-c4djv-set-coin-1345665593/main.log'}}],
                                                                             'exit_code': '0',
                                                                             'parameters': [{'name': 'coin',
                                                                                             'value': 'heads',
                                                                                             'value_from': {'path': './coin_output.txt'}}]},
                                                                 'phase': 'Succeeded',
                                                                 'progress': '1/1',
                                                                 'resources_duration': {'cpu': 0,
                                                                                        'memory': 2},
                                                                 'started_at': datetime.datetime(2024, 4, 30, 23, 3, 26, tzinfo=tzutc()),
                                                                 'template_name': 'set-coin',
                                                                 'template_scope': 'local/set-a-coin-c4djv',
                                                                 'type': 'Pod'},
                                 'set-a-coin-c4djv-1931323328': {'boundary_id': 'set-a-coin-c4djv',
                                                                 'display_name': 'Show-a-coin',
                                                                 'finished_at': datetime.datetime(2024, 4, 30, 23, 3, 40, tzinfo=tzutc()),
                                                                 'host_node_name': 'kind-control-plane',
                                                                 'id': 'set-a-coin-c4djv-1931323328',
                                                                 'inputs': {'parameters': [{'name': 'coin',
                                                                                            'value': 'heads'}]},
                                                                 'name': 'set-a-coin-c4djv.Show-a-coin',
                                                                 'outputs': {'artifacts': [{'name': 'main-logs',
                                                                                            's3': {'key': 'set-a-coin-c4djv/set-a-coin-c4djv-show-coin-1931323328/main.log'}}],
                                                                             'exit_code': '0'},
                                                                 'phase': 'Succeeded',
                                                                 'progress': '1/1',
                                                                 'resources_duration': {'cpu': 0,
                                                                                        'memory': 2},
                                                                 'started_at': datetime.datetime(2024, 4, 30, 23, 3, 36, tzinfo=tzutc()),
                                                                 'template_name': 'show-coin',
                                                                 'template_scope': 'local/set-a-coin-c4djv',
                                                                 'type': 'Pod'}},
                       'phase': 'Succeeded',
                       'progress': '2/2',
                       'resources_duration': {'cpu': 0, 'memory': 4},
                       'started_at': datetime.datetime(2024, 4, 30, 23, 3, 26, tzinfo=tzutc()),
                       'task_results_completion_status': {'set-a-coin-c4djv-1345665593': True,
                                                          'set-a-coin-c4djv-1931323328': True}}},
           {'metadata': {'annotations': {'workflows.argoproj.io/pod-name-format': 'v2'},
                         'creation_timestamp': datetime.datetime(2024, 4, 30, 22, 43, 34, tzinfo=tzutc()),
                         'generate_name': 'set-a-coin-',
                         'generation': 4,
                         'labels': {'workflows.argoproj.io/completed': 'true',
                                    'workflows.argoproj.io/creator': 'system-serviceaccount-argo-argo-server',
                                    'workflows.argoproj.io/phase': 'Succeeded'},
                         'managed_fields': [{'api_version': 'argoproj.io/v1alpha1',
                                             'fields_type': 'FieldsV1',
                                             'fields_v1': {'f:metadata': {'f:generateName': {},
                                                                          'f:labels': {'.': {},
                                                                                       'f:workflows.argoproj.io/creator': {}}},
                                                           'f:spec': {}},
                                             'manager': 'argo',
                                             'operation': 'Update',
                                             'time': datetime.datetime(2024, 4, 30, 22, 43, 34, tzinfo=tzutc())},
                                            {'api_version': 'argoproj.io/v1alpha1',
                                             'fields_type': 'FieldsV1',
                                             'fields_v1': {'f:metadata': {'f:annotations': {'.': {},
                                                                                            'f:workflows.argoproj.io/pod-name-format': {}},
                                                                          'f:labels': {'f:workflows.argoproj.io/completed': {},
                                                                                       'f:workflows.argoproj.io/phase': {}}},
                                                           'f:status': {}},
                                             'manager': 'workflow-controller',
                                             'operation': 'Update',
                                             'time': datetime.datetime(2024, 4, 30, 22, 43, 54, tzinfo=tzutc())}],
                         'name': 'set-a-coin-6nj8w',
                         'namespace': 'argo',
                         'resource_version': '44886',
                         'uid': '8a87a9df-107c-42e2-8185-5443bd3ce621'},
            'spec': {'arguments': {'parameters': [{'name': 'coin',
                                                   'value': 'heads'}]},
                     'entrypoint': 'Coin-set',
                     'templates': [{'dag': {'tasks': [{'arguments': {'parameters': [{'name': 'coin',
                                                                                     'value': '{{workflow.parameters.coin}}'}]},
                                                       'name': 'Set-a-coin',
                                                       'template': 'set-coin'},
                                                      {'arguments': {'parameters': [{'name': 'coin',
                                                                                     'value': '{{tasks.Set-a-coin.outputs.parameters.coin}}'}]},
                                                       'depends': 'Set-a-coin',
                                                       'name': 'Show-a-coin',
                                                       'template': 'show-coin'}]},
                                    'inputs': {},
                                    'metadata': {},
                                    'name': 'Coin-set',
                                    'outputs': {}},
                                   {'inputs': {'parameters': [{'name': 'coin'}]},
                                    'metadata': {},
                                    'name': 'set-coin',
                                    'outputs': {'parameters': [{'name': 'coin',
                                                                'value_from': {'path': './coin_output.txt'}}]},
                                    'script': {'command': ['python'],
                                               'image': 'python:3.8',
                                               'name': '',
                                               'resources': {},
                                               'source': 'import os\n'
                                                         'import sys\n'
                                                         'sys.path.append(os.getcwd())\n'
                                                         'import json\n'
                                                         'try: coin = '
                                                         "json.loads(r'''{{inputs.parameters.coin}}''')\n"
                                                         'except: coin = '
                                                         "r'''{{inputs.parameters.coin}}'''\n"
                                                         '\n'
                                                         'with '
                                                         "open('./coin_output.txt', "
                                                         "'w') as output:\n"
                                                         '    '
                                                         'output.write(coin)'}},
                                   {'inputs': {'parameters': [{'name': 'coin'}]},
                                    'metadata': {},
                                    'name': 'show-coin',
                                    'outputs': {},
                                    'script': {'command': ['python'],
                                               'image': 'python:3.8',
                                               'name': '',
                                               'resources': {},
                                               'source': 'import os\n'
                                                         'import sys\n'
                                                         'sys.path.append(os.getcwd())\n'
                                                         'import json\n'
                                                         'try: coin = '
                                                         "json.loads(r'''{{inputs.parameters.coin}}''')\n"
                                                         'except: coin = '
                                                         "r'''{{inputs.parameters.coin}}'''\n"
                                                         '\n'
                                                         "print(f'it was "
                                                         "{coin}')"}}]},
            'status': {'artifact_gc_status': {'not_specified': True},
                       'artifact_repository_ref': {'artifact_repository': {'archive_logs': True,
                                                                           's3': {'access_key_secret': {'key': 'accesskey',
                                                                                                        'name': 'my-minio-cred'},
                                                                                  'bucket': 'my-bucket',
                                                                                  'endpoint': 'minio:9000',
                                                                                  'insecure': True,
                                                                                  'secret_key_secret': {'key': 'secretkey',
                                                                                                        'name': 'my-minio-cred'}}},
                                                   'config_map': 'artifact-repositories',
                                                   'key': 'default-v1',
                                                   'namespace': 'argo'},
                       'conditions': [{'status': 'False', 'type': 'PodRunning'},
                                      {'status': 'True', 'type': 'Completed'}],
                       'finished_at': datetime.datetime(2024, 4, 30, 22, 43, 54, tzinfo=tzutc()),
                       'nodes': {'set-a-coin-6nj8w': {'children': ['set-a-coin-6nj8w-2445967415'],
                                                      'display_name': 'set-a-coin-6nj8w',
                                                      'finished_at': datetime.datetime(2024, 4, 30, 22, 43, 54, tzinfo=tzutc()),
                                                      'id': 'set-a-coin-6nj8w',
                                                      'name': 'set-a-coin-6nj8w',
                                                      'outbound_nodes': ['set-a-coin-6nj8w-3265054642'],
                                                      'phase': 'Succeeded',
                                                      'progress': '2/2',
                                                      'resources_duration': {'cpu': 0,
                                                                             'memory': 4},
                                                      'started_at': datetime.datetime(2024, 4, 30, 22, 43, 34, tzinfo=tzutc()),
                                                      'template_name': 'Coin-set',
                                                      'template_scope': 'local/set-a-coin-6nj8w',
                                                      'type': 'DAG'},
                                 'set-a-coin-6nj8w-2445967415': {'boundary_id': 'set-a-coin-6nj8w',
                                                                 'children': ['set-a-coin-6nj8w-3265054642'],
                                                                 'display_name': 'Set-a-coin',
                                                                 'finished_at': datetime.datetime(2024, 4, 30, 22, 43, 38, tzinfo=tzutc()),
                                                                 'host_node_name': 'kind-control-plane',
                                                                 'id': 'set-a-coin-6nj8w-2445967415',
                                                                 'inputs': {'parameters': [{'name': 'coin',
                                                                                            'value': 'heads'}]},
                                                                 'name': 'set-a-coin-6nj8w.Set-a-coin',
                                                                 'outputs': {'artifacts': [{'name': 'main-logs',
                                                                                            's3': {'key': 'set-a-coin-6nj8w/set-a-coin-6nj8w-set-coin-2445967415/main.log'}}],
                                                                             'exit_code': '0',
                                                                             'parameters': [{'name': 'coin',
                                                                                             'value': 'heads',
                                                                                             'value_from': {'path': './coin_output.txt'}}]},
                                                                 'phase': 'Succeeded',
                                                                 'progress': '1/1',
                                                                 'resources_duration': {'cpu': 0,
                                                                                        'memory': 2},
                                                                 'started_at': datetime.datetime(2024, 4, 30, 22, 43, 34, tzinfo=tzutc()),
                                                                 'template_name': 'set-coin',
                                                                 'template_scope': 'local/set-a-coin-6nj8w',
                                                                 'type': 'Pod'},
                                 'set-a-coin-6nj8w-3265054642': {'boundary_id': 'set-a-coin-6nj8w',
                                                                 'display_name': 'Show-a-coin',
                                                                 'finished_at': datetime.datetime(2024, 4, 30, 22, 43, 48, tzinfo=tzutc()),
                                                                 'host_node_name': 'kind-control-plane',
                                                                 'id': 'set-a-coin-6nj8w-3265054642',
                                                                 'inputs': {'parameters': [{'name': 'coin',
                                                                                            'value': 'heads'}]},
                                                                 'name': 'set-a-coin-6nj8w.Show-a-coin',
                                                                 'outputs': {'artifacts': [{'name': 'main-logs',
                                                                                            's3': {'key': 'set-a-coin-6nj8w/set-a-coin-6nj8w-show-coin-3265054642/main.log'}}],
                                                                             'exit_code': '0'},
                                                                 'phase': 'Succeeded',
                                                                 'progress': '1/1',
                                                                 'resources_duration': {'cpu': 0,
                                                                                        'memory': 2},
                                                                 'started_at': datetime.datetime(2024, 4, 30, 22, 43, 44, tzinfo=tzutc()),
                                                                 'template_name': 'show-coin',
                                                                 'template_scope': 'local/set-a-coin-6nj8w',
                                                                 'type': 'Pod'}},
                       'phase': 'Succeeded',
                       'progress': '2/2',
                       'resources_duration': {'cpu': 0, 'memory': 4},
                       'started_at': datetime.datetime(2024, 4, 30, 22, 43, 34, tzinfo=tzutc()),
                       'task_results_completion_status': {'set-a-coin-6nj8w-2445967415': True,
                                                          'set-a-coin-6nj8w-3265054642': True}}},
           {'metadata': {'annotations': {'workflows.argoproj.io/pod-name-format': 'v2'},
                         'creation_timestamp': datetime.datetime(2024, 4, 30, 22, 15, 16, tzinfo=tzutc()),
                         'generate_name': 'flip-a-coin-',
                         'generation': 4,
                         'labels': {'workflows.argoproj.io/completed': 'true',
                                    'workflows.argoproj.io/creator': 'system-serviceaccount-argo-argo-server',
                                    'workflows.argoproj.io/phase': 'Succeeded'},
                         'managed_fields': [{'api_version': 'argoproj.io/v1alpha1',
                                             'fields_type': 'FieldsV1',
                                             'fields_v1': {'f:metadata': {'f:generateName': {},
                                                                          'f:labels': {'.': {},
                                                                                       'f:workflows.argoproj.io/creator': {}}},
                                                           'f:spec': {}},
                                             'manager': 'argo',
                                             'operation': 'Update',
                                             'time': datetime.datetime(2024, 4, 30, 22, 15, 16, tzinfo=tzutc())},
                                            {'api_version': 'argoproj.io/v1alpha1',
                                             'fields_type': 'FieldsV1',
                                             'fields_v1': {'f:metadata': {'f:annotations': {'.': {},
                                                                                            'f:workflows.argoproj.io/pod-name-format': {}},
                                                                          'f:labels': {'f:workflows.argoproj.io/completed': {},
                                                                                       'f:workflows.argoproj.io/phase': {}}},
                                                           'f:status': {}},
                                             'manager': 'workflow-controller',
                                             'operation': 'Update',
                                             'time': datetime.datetime(2024, 4, 30, 22, 15, 36, tzinfo=tzutc())}],
                         'name': 'flip-a-coin-gfvkd',
                         'namespace': 'argo',
                         'resource_version': '42280',
                         'uid': '547a28a5-0743-4645-8171-e7b0dfc294f0'},
            'spec': {'arguments': {},
                     'entrypoint': 'Coin-flip',
                     'templates': [{'dag': {'tasks': [{'arguments': {},
                                                       'name': 'Flip-a-coin',
                                                       'template': 'flip-coin'},
                                                      {'arguments': {},
                                                       'depends': 'Flip-a-coin',
                                                       'name': 'Heads',
                                                       'template': 'heads',
                                                       'when': '{{tasks.Flip-a-coin.outputs.result}} '
                                                               '== heads'},
                                                      {'arguments': {},
                                                       'depends': 'Flip-a-coin',
                                                       'name': 'Tails',
                                                       'template': 'tails',
                                                       'when': '{{tasks.Flip-a-coin.outputs.result}} '
                                                               '== tails'}]},
                                    'inputs': {},
                                    'metadata': {},
                                    'name': 'Coin-flip',
                                    'outputs': {}},
                                   {'inputs': {},
                                    'metadata': {},
                                    'name': 'flip-coin',
                                    'outputs': {},
                                    'script': {'command': ['python'],
                                               'image': 'python:3.8',
                                               'name': '',
                                               'resources': {},
                                               'source': 'import os\n'
                                                         'import sys\n'
                                                         'sys.path.append(os.getcwd())\n'
                                                         'import random\n'
                                                         "res = 'heads' if "
                                                         'random.randint(0, 1) '
                                                         "== 0 else 'tails'\n"
                                                         'print(res)'}},
                                   {'inputs': {},
                                    'metadata': {},
                                    'name': 'heads',
                                    'outputs': {},
                                    'script': {'command': ['python'],
                                               'image': 'python:3.8',
                                               'name': '',
                                               'resources': {},
                                               'source': 'import os\n'
                                                         'import sys\n'
                                                         'sys.path.append(os.getcwd())\n'
                                                         "print('it was "
                                                         "heads')"}},
                                   {'inputs': {},
                                    'metadata': {},
                                    'name': 'tails',
                                    'outputs': {},
                                    'script': {'command': ['python'],
                                               'image': 'python:3.8',
                                               'name': '',
                                               'resources': {},
                                               'source': 'import os\n'
                                                         'import sys\n'
                                                         'sys.path.append(os.getcwd())\n'
                                                         "print('it was "
                                                         "tail')"}}]},
            'status': {'artifact_gc_status': {'not_specified': True},
                       'artifact_repository_ref': {'artifact_repository': {'archive_logs': True,
                                                                           's3': {'access_key_secret': {'key': 'accesskey',
                                                                                                        'name': 'my-minio-cred'},
                                                                                  'bucket': 'my-bucket',
                                                                                  'endpoint': 'minio:9000',
                                                                                  'insecure': True,
                                                                                  'secret_key_secret': {'key': 'secretkey',
                                                                                                        'name': 'my-minio-cred'}}},
                                                   'config_map': 'artifact-repositories',
                                                   'key': 'default-v1',
                                                   'namespace': 'argo'},
                       'conditions': [{'status': 'False', 'type': 'PodRunning'},
                                      {'status': 'True', 'type': 'Completed'}],
                       'finished_at': datetime.datetime(2024, 4, 30, 22, 15, 36, tzinfo=tzutc()),
                       'nodes': {'flip-a-coin-gfvkd': {'children': ['flip-a-coin-gfvkd-3969970294'],
                                                       'display_name': 'flip-a-coin-gfvkd',
                                                       'finished_at': datetime.datetime(2024, 4, 30, 22, 15, 36, tzinfo=tzutc()),
                                                       'id': 'flip-a-coin-gfvkd',
                                                       'name': 'flip-a-coin-gfvkd',
                                                       'outbound_nodes': ['flip-a-coin-gfvkd-809184812',
                                                                          'flip-a-coin-gfvkd-3423663580'],
                                                       'phase': 'Succeeded',
                                                       'progress': '2/2',
                                                       'resources_duration': {'cpu': 0,
                                                                              'memory': 4},
                                                       'started_at': datetime.datetime(2024, 4, 30, 22, 15, 16, tzinfo=tzutc()),
                                                       'template_name': 'Coin-flip',
                                                       'template_scope': 'local/flip-a-coin-gfvkd',
                                                       'type': 'DAG'},
                                 'flip-a-coin-gfvkd-3423663580': {'boundary_id': 'flip-a-coin-gfvkd',
                                                                  'display_name': 'Tails',
                                                                  'finished_at': datetime.datetime(2024, 4, 30, 22, 15, 26, tzinfo=tzutc()),
                                                                  'id': 'flip-a-coin-gfvkd-3423663580',
                                                                  'message': 'when '
                                                                             "'heads "
                                                                             '== '
                                                                             "tails' "
                                                                             'evaluated '
                                                                             'false',
                                                                  'name': 'flip-a-coin-gfvkd.Tails',
                                                                  'node_flag': {},
                                                                  'phase': 'Skipped',
                                                                  'started_at': datetime.datetime(2024, 4, 30, 22, 15, 26, tzinfo=tzutc()),
                                                                  'template_name': 'tails',
                                                                  'template_scope': 'local/flip-a-coin-gfvkd',
                                                                  'type': 'Skipped'},
                                 'flip-a-coin-gfvkd-3969970294': {'boundary_id': 'flip-a-coin-gfvkd',
                                                                  'children': ['flip-a-coin-gfvkd-809184812',
                                                                               'flip-a-coin-gfvkd-3423663580'],
                                                                  'display_name': 'Flip-a-coin',
                                                                  'finished_at': datetime.datetime(2024, 4, 30, 22, 15, 20, tzinfo=tzutc()),
                                                                  'host_node_name': 'kind-control-plane',
                                                                  'id': 'flip-a-coin-gfvkd-3969970294',
                                                                  'name': 'flip-a-coin-gfvkd.Flip-a-coin',
                                                                  'outputs': {'artifacts': [{'name': 'main-logs',
                                                                                             's3': {'key': 'flip-a-coin-gfvkd/flip-a-coin-gfvkd-flip-coin-3969970294/main.log'}}],
                                                                              'exit_code': '0',
                                                                              'result': 'heads'},
                                                                  'phase': 'Succeeded',
                                                                  'progress': '1/1',
                                                                  'resources_duration': {'cpu': 0,
                                                                                         'memory': 2},
                                                                  'started_at': datetime.datetime(2024, 4, 30, 22, 15, 16, tzinfo=tzutc()),
                                                                  'template_name': 'flip-coin',
                                                                  'template_scope': 'local/flip-a-coin-gfvkd',
                                                                  'type': 'Pod'},
                                 'flip-a-coin-gfvkd-809184812': {'boundary_id': 'flip-a-coin-gfvkd',
                                                                 'display_name': 'Heads',
                                                                 'finished_at': datetime.datetime(2024, 4, 30, 22, 15, 30, tzinfo=tzutc()),
                                                                 'host_node_name': 'kind-control-plane',
                                                                 'id': 'flip-a-coin-gfvkd-809184812',
                                                                 'name': 'flip-a-coin-gfvkd.Heads',
                                                                 'outputs': {'artifacts': [{'name': 'main-logs',
                                                                                            's3': {'key': 'flip-a-coin-gfvkd/flip-a-coin-gfvkd-heads-809184812/main.log'}}],
                                                                             'exit_code': '0'},
                                                                 'phase': 'Succeeded',
                                                                 'progress': '1/1',
                                                                 'resources_duration': {'cpu': 0,
                                                                                        'memory': 2},
                                                                 'started_at': datetime.datetime(2024, 4, 30, 22, 15, 26, tzinfo=tzutc()),
                                                                 'template_name': 'heads',
                                                                 'template_scope': 'local/flip-a-coin-gfvkd',
                                                                 'type': 'Pod'}},
                       'phase': 'Succeeded',
                       'progress': '2/2',
                       'resources_duration': {'cpu': 0, 'memory': 4},
                       'started_at': datetime.datetime(2024, 4, 30, 22, 15, 16, tzinfo=tzutc()),
                       'task_results_completion_status': {'flip-a-coin-gfvkd-3969970294': True,
                                                          'flip-a-coin-gfvkd-809184812': True}}},
           {'metadata': {'annotations': {'workflows.argoproj.io/pod-name-format': 'v2'},
                         'creation_timestamp': datetime.datetime(2024, 4, 30, 22, 9, 38, tzinfo=tzutc()),
                         'generate_name': 'flip-a-coin-',
                         'generation': 4,
                         'labels': {'workflows.argoproj.io/completed': 'true',
                                    'workflows.argoproj.io/creator': 'system-serviceaccount-argo-argo-server',
                                    'workflows.argoproj.io/phase': 'Succeeded',
                                    'workflows.argoproj.io/resubmitted-from-workflow': 'flip-a-coin-6mzkt'},
                         'managed_fields': [{'api_version': 'argoproj.io/v1alpha1',
                                             'fields_type': 'FieldsV1',
                                             'fields_v1': {'f:metadata': {'f:annotations': {'.': {},
                                                                                            'f:workflows.argoproj.io/pod-name-format': {}},
                                                                          'f:generateName': {},
                                                                          'f:labels': {'.': {},
                                                                                       'f:workflows.argoproj.io/creator': {},
                                                                                       'f:workflows.argoproj.io/resubmitted-from-workflow': {}}},
                                                           'f:spec': {}},
                                             'manager': 'argo',
                                             'operation': 'Update',
                                             'time': datetime.datetime(2024, 4, 30, 22, 9, 38, tzinfo=tzutc())},
                                            {'api_version': 'argoproj.io/v1alpha1',
                                             'fields_type': 'FieldsV1',
                                             'fields_v1': {'f:metadata': {'f:labels': {'f:workflows.argoproj.io/completed': {},
                                                                                       'f:workflows.argoproj.io/phase': {}}},
                                                           'f:status': {}},
                                             'manager': 'workflow-controller',
                                             'operation': 'Update',
                                             'time': datetime.datetime(2024, 4, 30, 22, 9, 58, tzinfo=tzutc())}],
                         'name': 'flip-a-coin-gg758',
                         'namespace': 'argo',
                         'resource_version': '41714',
                         'uid': 'b852634a-b5cc-48e2-b144-9448e0b3e85a'},
            'spec': {'arguments': {},
                     'entrypoint': 'Coin-flip',
                     'templates': [{'dag': {'tasks': [{'arguments': {},
                                                       'name': 'Flip-a-coin',
                                                       'template': 'flip-coin'},
                                                      {'arguments': {},
                                                       'depends': 'Flip-a-coin',
                                                       'name': 'Heads',
                                                       'template': 'heads',
                                                       'when': '{{tasks.Flip-a-coin.outputs.result}} '
                                                               '== heads'},
                                                      {'arguments': {},
                                                       'depends': 'Flip-a-coin',
                                                       'name': 'Tails',
                                                       'template': 'tails',
                                                       'when': '{{tasks.Flip-a-coin.outputs.result}} '
                                                               '== tails'}]},
                                    'inputs': {},
                                    'metadata': {},
                                    'name': 'Coin-flip',
                                    'outputs': {}},
                                   {'inputs': {},
                                    'metadata': {},
                                    'name': 'flip-coin',
                                    'outputs': {},
                                    'script': {'command': ['python'],
                                               'image': 'python:3.8',
                                               'name': '',
                                               'resources': {},
                                               'source': 'import os\n'
                                                         'import sys\n'
                                                         'sys.path.append(os.getcwd())\n'
                                                         'import random\n'
                                                         "res = 'heads' if "
                                                         'random.randint(0, 1) '
                                                         "== 0 else 'tails'\n"
                                                         'print(res)'}},
                                   {'inputs': {},
                                    'metadata': {},
                                    'name': 'heads',
                                    'outputs': {},
                                    'script': {'command': ['python'],
                                               'image': 'python:3.8',
                                               'name': '',
                                               'resources': {},
                                               'source': 'import os\n'
                                                         'import sys\n'
                                                         'sys.path.append(os.getcwd())\n'
                                                         "print('it was "
                                                         "heads')"}},
                                   {'inputs': {},
                                    'metadata': {},
                                    'name': 'tails',
                                    'outputs': {},
                                    'script': {'command': ['python'],
                                               'image': 'python:3.8',
                                               'name': '',
                                               'resources': {},
                                               'source': 'import os\n'
                                                         'import sys\n'
                                                         'sys.path.append(os.getcwd())\n'
                                                         "print('it was "
                                                         "tail')"}}]},
            'status': {'artifact_gc_status': {'not_specified': True},
                       'artifact_repository_ref': {'artifact_repository': {'archive_logs': True,
                                                                           's3': {'access_key_secret': {'key': 'accesskey',
                                                                                                        'name': 'my-minio-cred'},
                                                                                  'bucket': 'my-bucket',
                                                                                  'endpoint': 'minio:9000',
                                                                                  'insecure': True,
                                                                                  'secret_key_secret': {'key': 'secretkey',
                                                                                                        'name': 'my-minio-cred'}}},
                                                   'config_map': 'artifact-repositories',
                                                   'key': 'default-v1',
                                                   'namespace': 'argo'},
                       'conditions': [{'status': 'False', 'type': 'PodRunning'},
                                      {'status': 'True', 'type': 'Completed'}],
                       'finished_at': datetime.datetime(2024, 4, 30, 22, 9, 58, tzinfo=tzutc()),
                       'nodes': {'flip-a-coin-gg758': {'children': ['flip-a-coin-gg758-879090266'],
                                                       'display_name': 'flip-a-coin-gg758',
                                                       'finished_at': datetime.datetime(2024, 4, 30, 22, 9, 58, tzinfo=tzutc()),
                                                       'id': 'flip-a-coin-gg758',
                                                       'name': 'flip-a-coin-gg758',
                                                       'outbound_nodes': ['flip-a-coin-gg758-3647379952',
                                                                          'flip-a-coin-gg758-3538787344'],
                                                       'phase': 'Succeeded',
                                                       'progress': '2/2',
                                                       'resources_duration': {'cpu': 0,
                                                                              'memory': 4},
                                                       'started_at': datetime.datetime(2024, 4, 30, 22, 9, 38, tzinfo=tzutc()),
                                                       'template_name': 'Coin-flip',
                                                       'template_scope': 'local/flip-a-coin-gg758',
                                                       'type': 'DAG'},
                                 'flip-a-coin-gg758-3538787344': {'boundary_id': 'flip-a-coin-gg758',
                                                                  'display_name': 'Tails',
                                                                  'finished_at': datetime.datetime(2024, 4, 30, 22, 9, 53, tzinfo=tzutc()),
                                                                  'host_node_name': 'kind-control-plane',
                                                                  'id': 'flip-a-coin-gg758-3538787344',
                                                                  'name': 'flip-a-coin-gg758.Tails',
                                                                  'outputs': {'artifacts': [{'name': 'main-logs',
                                                                                             's3': {'key': 'flip-a-coin-gg758/flip-a-coin-gg758-tails-3538787344/main.log'}}],
                                                                              'exit_code': '0'},
                                                                  'phase': 'Succeeded',
                                                                  'progress': '1/1',
                                                                  'resources_duration': {'cpu': 0,
                                                                                         'memory': 2},
                                                                  'started_at': datetime.datetime(2024, 4, 30, 22, 9, 48, tzinfo=tzutc()),
                                                                  'template_name': 'tails',
                                                                  'template_scope': 'local/flip-a-coin-gg758',
                                                                  'type': 'Pod'},
                                 'flip-a-coin-gg758-3647379952': {'boundary_id': 'flip-a-coin-gg758',
                                                                  'display_name': 'Heads',
                                                                  'finished_at': datetime.datetime(2024, 4, 30, 22, 9, 48, tzinfo=tzutc()),
                                                                  'id': 'flip-a-coin-gg758-3647379952',
                                                                  'message': 'when '
                                                                             "'tails "
                                                                             '== '
                                                                             "heads' "
                                                                             'evaluated '
                                                                             'false',
                                                                  'name': 'flip-a-coin-gg758.Heads',
                                                                  'node_flag': {},
                                                                  'phase': 'Skipped',
                                                                  'started_at': datetime.datetime(2024, 4, 30, 22, 9, 48, tzinfo=tzutc()),
                                                                  'template_name': 'heads',
                                                                  'template_scope': 'local/flip-a-coin-gg758',
                                                                  'type': 'Skipped'},
                                 'flip-a-coin-gg758-879090266': {'boundary_id': 'flip-a-coin-gg758',
                                                                 'children': ['flip-a-coin-gg758-3647379952',
                                                                              'flip-a-coin-gg758-3538787344'],
                                                                 'display_name': 'Flip-a-coin',
                                                                 'finished_at': datetime.datetime(2024, 4, 30, 22, 9, 43, tzinfo=tzutc()),
                                                                 'host_node_name': 'kind-control-plane',
                                                                 'id': 'flip-a-coin-gg758-879090266',
                                                                 'name': 'flip-a-coin-gg758.Flip-a-coin',
                                                                 'outputs': {'artifacts': [{'name': 'main-logs',
                                                                                            's3': {'key': 'flip-a-coin-gg758/flip-a-coin-gg758-flip-coin-879090266/main.log'}}],
                                                                             'exit_code': '0',
                                                                             'result': 'tails'},
                                                                 'phase': 'Succeeded',
                                                                 'progress': '1/1',
                                                                 'resources_duration': {'cpu': 0,
                                                                                        'memory': 2},
                                                                 'started_at': datetime.datetime(2024, 4, 30, 22, 9, 38, tzinfo=tzutc()),
                                                                 'template_name': 'flip-coin',
                                                                 'template_scope': 'local/flip-a-coin-gg758',
                                                                 'type': 'Pod'}},
                       'phase': 'Succeeded',
                       'progress': '2/2',
                       'resources_duration': {'cpu': 0, 'memory': 4},
                       'started_at': datetime.datetime(2024, 4, 30, 22, 9, 38, tzinfo=tzutc()),
                       'task_results_completion_status': {'flip-a-coin-gg758-3538787344': True,
                                                          'flip-a-coin-gg758-879090266': True}}},
           {'metadata': {'annotations': {'workflows.argoproj.io/pod-name-format': 'v2'},
                         'creation_timestamp': datetime.datetime(2024, 4, 30, 22, 9, 9, tzinfo=tzutc()),
                         'generate_name': 'flip-a-coin-',
                         'generation': 4,
                         'labels': {'workflows.argoproj.io/completed': 'true',
                                    'workflows.argoproj.io/creator': 'system-serviceaccount-argo-argo-server',
                                    'workflows.argoproj.io/phase': 'Succeeded'},
                         'managed_fields': [{'api_version': 'argoproj.io/v1alpha1',
                                             'fields_type': 'FieldsV1',
                                             'fields_v1': {'f:metadata': {'f:generateName': {},
                                                                          'f:labels': {'.': {},
                                                                                       'f:workflows.argoproj.io/creator': {}}},
                                                           'f:spec': {}},
                                             'manager': 'argo',
                                             'operation': 'Update',
                                             'time': datetime.datetime(2024, 4, 30, 22, 9, 9, tzinfo=tzutc())},
                                            {'api_version': 'argoproj.io/v1alpha1',
                                             'fields_type': 'FieldsV1',
                                             'fields_v1': {'f:metadata': {'f:annotations': {'.': {},
                                                                                            'f:workflows.argoproj.io/pod-name-format': {}},
                                                                          'f:labels': {'f:workflows.argoproj.io/completed': {},
                                                                                       'f:workflows.argoproj.io/phase': {}}},
                                                           'f:status': {}},
                                             'manager': 'workflow-controller',
                                             'operation': 'Update',
                                             'time': datetime.datetime(2024, 4, 30, 22, 9, 29, tzinfo=tzutc())}],
                         'name': 'flip-a-coin-6mzkt',
                         'namespace': 'argo',
                         'resource_version': '41610',
                         'uid': '8aeb4732-1890-49b3-a3cc-7a203323e41b'},
            'spec': {'arguments': {},
                     'entrypoint': 'Coin-flip',
                     'templates': [{'dag': {'tasks': [{'arguments': {},
                                                       'name': 'Flip-a-coin',
                                                       'template': 'flip-coin'},
                                                      {'arguments': {},
                                                       'depends': 'Flip-a-coin',
                                                       'name': 'Heads',
                                                       'template': 'heads',
                                                       'when': '{{tasks.Flip-a-coin.outputs.result}} '
                                                               '== heads'},
                                                      {'arguments': {},
                                                       'depends': 'Flip-a-coin',
                                                       'name': 'Tails',
                                                       'template': 'tails',
                                                       'when': '{{tasks.Flip-a-coin.outputs.result}} '
                                                               '== tails'}]},
                                    'inputs': {},
                                    'metadata': {},
                                    'name': 'Coin-flip',
                                    'outputs': {}},
                                   {'inputs': {},
                                    'metadata': {},
                                    'name': 'flip-coin',
                                    'outputs': {},
                                    'script': {'command': ['python'],
                                               'image': 'python:3.8',
                                               'name': '',
                                               'resources': {},
                                               'source': 'import os\n'
                                                         'import sys\n'
                                                         'sys.path.append(os.getcwd())\n'
                                                         'import random\n'
                                                         "res = 'heads' if "
                                                         'random.randint(0, 1) '
                                                         "== 0 else 'tails'\n"
                                                         'print(res)'}},
                                   {'inputs': {},
                                    'metadata': {},
                                    'name': 'heads',
                                    'outputs': {},
                                    'script': {'command': ['python'],
                                               'image': 'python:3.8',
                                               'name': '',
                                               'resources': {},
                                               'source': 'import os\n'
                                                         'import sys\n'
                                                         'sys.path.append(os.getcwd())\n'
                                                         "print('it was "
                                                         "heads')"}},
                                   {'inputs': {},
                                    'metadata': {},
                                    'name': 'tails',
                                    'outputs': {},
                                    'script': {'command': ['python'],
                                               'image': 'python:3.8',
                                               'name': '',
                                               'resources': {},
                                               'source': 'import os\n'
                                                         'import sys\n'
                                                         'sys.path.append(os.getcwd())\n'
                                                         "print('it was "
                                                         "tail')"}}]},
            'status': {'artifact_gc_status': {'not_specified': True},
                       'artifact_repository_ref': {'artifact_repository': {'archive_logs': True,
                                                                           's3': {'access_key_secret': {'key': 'accesskey',
                                                                                                        'name': 'my-minio-cred'},
                                                                                  'bucket': 'my-bucket',
                                                                                  'endpoint': 'minio:9000',
                                                                                  'insecure': True,
                                                                                  'secret_key_secret': {'key': 'secretkey',
                                                                                                        'name': 'my-minio-cred'}}},
                                                   'config_map': 'artifact-repositories',
                                                   'key': 'default-v1',
                                                   'namespace': 'argo'},
                       'conditions': [{'status': 'False', 'type': 'PodRunning'},
                                      {'status': 'True', 'type': 'Completed'}],
                       'finished_at': datetime.datetime(2024, 4, 30, 22, 9, 29, tzinfo=tzutc()),
                       'nodes': {'flip-a-coin-6mzkt': {'children': ['flip-a-coin-6mzkt-2510640710'],
                                                       'display_name': 'flip-a-coin-6mzkt',
                                                       'finished_at': datetime.datetime(2024, 4, 30, 22, 9, 29, tzinfo=tzutc()),
                                                       'id': 'flip-a-coin-6mzkt',
                                                       'name': 'flip-a-coin-6mzkt',
                                                       'outbound_nodes': ['flip-a-coin-6mzkt-3218677116',
                                                                          'flip-a-coin-6mzkt-3994881996'],
                                                       'phase': 'Succeeded',
                                                       'progress': '2/2',
                                                       'resources_duration': {'cpu': 0,
                                                                              'memory': 4},
                                                       'started_at': datetime.datetime(2024, 4, 30, 22, 9, 9, tzinfo=tzutc()),
                                                       'template_name': 'Coin-flip',
                                                       'template_scope': 'local/flip-a-coin-6mzkt',
                                                       'type': 'DAG'},
                                 'flip-a-coin-6mzkt-2510640710': {'boundary_id': 'flip-a-coin-6mzkt',
                                                                  'children': ['flip-a-coin-6mzkt-3218677116',
                                                                               'flip-a-coin-6mzkt-3994881996'],
                                                                  'display_name': 'Flip-a-coin',
                                                                  'finished_at': datetime.datetime(2024, 4, 30, 22, 9, 14, tzinfo=tzutc()),
                                                                  'host_node_name': 'kind-control-plane',
                                                                  'id': 'flip-a-coin-6mzkt-2510640710',
                                                                  'name': 'flip-a-coin-6mzkt.Flip-a-coin',
                                                                  'outputs': {'artifacts': [{'name': 'main-logs',
                                                                                             's3': {'key': 'flip-a-coin-6mzkt/flip-a-coin-6mzkt-flip-coin-2510640710/main.log'}}],
                                                                              'exit_code': '0',
                                                                              'result': 'heads'},
                                                                  'phase': 'Succeeded',
                                                                  'progress': '1/1',
                                                                  'resources_duration': {'cpu': 0,
                                                                                         'memory': 2},
                                                                  'started_at': datetime.datetime(2024, 4, 30, 22, 9, 9, tzinfo=tzutc()),
                                                                  'template_name': 'flip-coin',
                                                                  'template_scope': 'local/flip-a-coin-6mzkt',
                                                                  'type': 'Pod'},
                                 'flip-a-coin-6mzkt-3218677116': {'boundary_id': 'flip-a-coin-6mzkt',
                                                                  'display_name': 'Heads',
                                                                  'finished_at': datetime.datetime(2024, 4, 30, 22, 9, 24, tzinfo=tzutc()),
                                                                  'host_node_name': 'kind-control-plane',
                                                                  'id': 'flip-a-coin-6mzkt-3218677116',
                                                                  'name': 'flip-a-coin-6mzkt.Heads',
                                                                  'outputs': {'artifacts': [{'name': 'main-logs',
                                                                                             's3': {'key': 'flip-a-coin-6mzkt/flip-a-coin-6mzkt-heads-3218677116/main.log'}}],
                                                                              'exit_code': '0'},
                                                                  'phase': 'Succeeded',
                                                                  'progress': '1/1',
                                                                  'resources_duration': {'cpu': 0,
                                                                                         'memory': 2},
                                                                  'started_at': datetime.datetime(2024, 4, 30, 22, 9, 19, tzinfo=tzutc()),
                                                                  'template_name': 'heads',
                                                                  'template_scope': 'local/flip-a-coin-6mzkt',
                                                                  'type': 'Pod'},
                                 'flip-a-coin-6mzkt-3994881996': {'boundary_id': 'flip-a-coin-6mzkt',
                                                                  'display_name': 'Tails',
                                                                  'finished_at': datetime.datetime(2024, 4, 30, 22, 9, 19, tzinfo=tzutc()),
                                                                  'id': 'flip-a-coin-6mzkt-3994881996',
                                                                  'message': 'when '
                                                                             "'heads "
                                                                             '== '
                                                                             "tails' "
                                                                             'evaluated '
                                                                             'false',
                                                                  'name': 'flip-a-coin-6mzkt.Tails',
                                                                  'node_flag': {},
                                                                  'phase': 'Skipped',
                                                                  'started_at': datetime.datetime(2024, 4, 30, 22, 9, 19, tzinfo=tzutc()),
                                                                  'template_name': 'tails',
                                                                  'template_scope': 'local/flip-a-coin-6mzkt',
                                                                  'type': 'Skipped'}},
                       'phase': 'Succeeded',
                       'progress': '2/2',
                       'resources_duration': {'cpu': 0, 'memory': 4},
                       'started_at': datetime.datetime(2024, 4, 30, 22, 9, 9, tzinfo=tzutc()),
                       'task_results_completion_status': {'flip-a-coin-6mzkt-2510640710': True,
                                                          'flip-a-coin-6mzkt-3218677116': True}}},
           {'metadata': {'annotations': {'pipelines.kubeflow.org/kfp_sdk_version': '1.2.0',
                                         'pipelines.kubeflow.org/pipeline_compilation_time': '2024-04-30T23:06:24.400587',
                                         'pipelines.kubeflow.org/pipeline_spec': '{"description": '
                                                                                 '"Flip '
                                                                                 'a '
                                                                                 'coin", '
                                                                                 '"name": '
                                                                                 '"Coin-flip"}',
                                         'workflows.argoproj.io/pod-name-format': 'v2'},
                         'creation_timestamp': datetime.datetime(2024, 4, 30, 22, 7, 1, tzinfo=tzutc()),
                         'generate_name': 'coin-flip-',
                         'generation': 4,
                         'labels': {'pipelines.kubeflow.org/kfp_sdk_version': '1.2.0',
                                    'workflows.argoproj.io/completed': 'true',
                                    'workflows.argoproj.io/creator': 'system-serviceaccount-argo-argo-server',
                                    'workflows.argoproj.io/phase': 'Succeeded'},
                         'managed_fields': [{'api_version': 'argoproj.io/v1alpha1',
                                             'fields_type': 'FieldsV1',
                                             'fields_v1': {'f:metadata': {'f:annotations': {'.': {},
                                                                                            'f:pipelines.kubeflow.org/kfp_sdk_version': {},
                                                                                            'f:pipelines.kubeflow.org/pipeline_compilation_time': {},
                                                                                            'f:pipelines.kubeflow.org/pipeline_spec': {}},
                                                                          'f:generateName': {},
                                                                          'f:labels': {'.': {},
                                                                                       'f:pipelines.kubeflow.org/kfp_sdk_version': {},
                                                                                       'f:workflows.argoproj.io/creator': {}}},
                                                           'f:spec': {}},
                                             'manager': 'argo',
                                             'operation': 'Update',
                                             'time': datetime.datetime(2024, 4, 30, 22, 7, 1, tzinfo=tzutc())},
                                            {'api_version': 'argoproj.io/v1alpha1',
                                             'fields_type': 'FieldsV1',
                                             'fields_v1': {'f:metadata': {'f:annotations': {'f:workflows.argoproj.io/pod-name-format': {}},
                                                                          'f:labels': {'f:workflows.argoproj.io/completed': {},
                                                                                       'f:workflows.argoproj.io/phase': {}}},
                                                           'f:status': {}},
                                             'manager': 'workflow-controller',
                                             'operation': 'Update',
                                             'time': datetime.datetime(2024, 4, 30, 22, 7, 21, tzinfo=tzutc())}],
                         'name': 'coin-flip-k6dcw',
                         'namespace': 'argo',
                         'resource_version': '41351',
                         'uid': 'a1c52af6-8209-485f-87ff-4f00b2b25657'},
            'spec': {'arguments': {},
                     'entrypoint': 'coin-flip',
                     'templates': [{'dag': {'tasks': [{'arguments': {},
                                                       'dependencies': ['flip-a-coin'],
                                                       'name': 'condition-1',
                                                       'template': 'condition-1',
                                                       'when': '"{{tasks.flip-a-coin.outputs.parameters.flip-a-coin-output}}" '
                                                               '== "heads"'},
                                                      {'arguments': {},
                                                       'dependencies': ['flip-a-coin'],
                                                       'name': 'condition-2',
                                                       'template': 'condition-2',
                                                       'when': '"{{tasks.flip-a-coin.outputs.parameters.flip-a-coin-output}}" '
                                                               '== "tails"'},
                                                      {'arguments': {},
                                                       'name': 'flip-a-coin',
                                                       'template': 'flip-a-coin'}]},
                                    'inputs': {},
                                    'metadata': {},
                                    'name': 'coin-flip',
                                    'outputs': {}},
                                   {'dag': {'tasks': [{'arguments': {},
                                                       'name': 'heads',
                                                       'template': 'heads'}]},
                                    'inputs': {},
                                    'metadata': {},
                                    'name': 'condition-1',
                                    'outputs': {}},
                                   {'dag': {'tasks': [{'arguments': {},
                                                       'name': 'tails',
                                                       'template': 'tails'}]},
                                    'inputs': {},
                                    'metadata': {},
                                    'name': 'condition-2',
                                    'outputs': {}},
                                   {'container': {'command': ['python',
                                                              '-c',
                                                              '\n'
                                                              'import random\n'
                                                              'res = "heads" '
                                                              'if '
                                                              'random.randint(0, '
                                                              '1) == 0 else '
                                                              '"tails"\n'
                                                              'with '
                                                              "open('/output', "
                                                              "'w') as f:\n"
                                                              '    '
                                                              'f.write(res)        \n'
                                                              '        '],
                                                  'image': 'python:alpine3.6',
                                                  'name': '',
                                                  'resources': {}},
                                    'inputs': {},
                                    'metadata': {},
                                    'name': 'flip-a-coin',
                                    'outputs': {'artifacts': [{'name': 'flip-a-coin-output',
                                                               'path': '/output'}],
                                                'parameters': [{'name': 'flip-a-coin-output',
                                                                'value_from': {'path': '/output'}}]}},
                                   {'container': {'command': ['sh',
                                                              '-c',
                                                              'echo "it was '
                                                              'heads"'],
                                                  'image': 'alpine:3.6',
                                                  'name': '',
                                                  'resources': {}},
                                    'inputs': {},
                                    'metadata': {},
                                    'name': 'heads',
                                    'outputs': {}},
                                   {'container': {'command': ['sh',
                                                              '-c',
                                                              'echo "it was '
                                                              'tails"'],
                                                  'image': 'alpine:3.6',
                                                  'name': '',
                                                  'resources': {}},
                                    'inputs': {},
                                    'metadata': {},
                                    'name': 'tails',
                                    'outputs': {}}]},
            'status': {'artifact_gc_status': {'not_specified': True},
                       'artifact_repository_ref': {'artifact_repository': {'archive_logs': True,
                                                                           's3': {'access_key_secret': {'key': 'accesskey',
                                                                                                        'name': 'my-minio-cred'},
                                                                                  'bucket': 'my-bucket',
                                                                                  'endpoint': 'minio:9000',
                                                                                  'insecure': True,
                                                                                  'secret_key_secret': {'key': 'secretkey',
                                                                                                        'name': 'my-minio-cred'}}},
                                                   'config_map': 'artifact-repositories',
                                                   'key': 'default-v1',
                                                   'namespace': 'argo'},
                       'conditions': [{'status': 'False', 'type': 'PodRunning'},
                                      {'status': 'True', 'type': 'Completed'}],
                       'finished_at': datetime.datetime(2024, 4, 30, 22, 7, 21, tzinfo=tzutc()),
                       'nodes': {'coin-flip-k6dcw': {'children': ['coin-flip-k6dcw-3053924319'],
                                                     'display_name': 'coin-flip-k6dcw',
                                                     'finished_at': datetime.datetime(2024, 4, 30, 22, 7, 21, tzinfo=tzutc()),
                                                     'id': 'coin-flip-k6dcw',
                                                     'name': 'coin-flip-k6dcw',
                                                     'outbound_nodes': ['coin-flip-k6dcw-4073488893',
                                                                        'coin-flip-k6dcw-3956639465'],
                                                     'phase': 'Succeeded',
                                                     'progress': '2/2',
                                                     'resources_duration': {'cpu': 0,
                                                                            'memory': 4},
                                                     'started_at': datetime.datetime(2024, 4, 30, 22, 7, 1, tzinfo=tzutc()),
                                                     'template_name': 'coin-flip',
                                                     'template_scope': 'local/coin-flip-k6dcw',
                                                     'type': 'DAG'},
                                 'coin-flip-k6dcw-3053924319': {'boundary_id': 'coin-flip-k6dcw',
                                                                'children': ['coin-flip-k6dcw-4073488893',
                                                                             'coin-flip-k6dcw-4023156036'],
                                                                'display_name': 'flip-a-coin',
                                                                'finished_at': datetime.datetime(2024, 4, 30, 22, 7, 5, tzinfo=tzutc()),
                                                                'host_node_name': 'kind-control-plane',
                                                                'id': 'coin-flip-k6dcw-3053924319',
                                                                'name': 'coin-flip-k6dcw.flip-a-coin',
                                                                'outputs': {'artifacts': [{'name': 'flip-a-coin-output',
                                                                                           'path': '/output',
                                                                                           's3': {'key': 'coin-flip-k6dcw/coin-flip-k6dcw-flip-a-coin-3053924319/flip-a-coin-output.tgz'}},
                                                                                          {'name': 'main-logs',
                                                                                           's3': {'key': 'coin-flip-k6dcw/coin-flip-k6dcw-flip-a-coin-3053924319/main.log'}}],
                                                                            'exit_code': '0',
                                                                            'parameters': [{'name': 'flip-a-coin-output',
                                                                                            'value': 'tails',
                                                                                            'value_from': {'path': '/output'}}]},
                                                                'phase': 'Succeeded',
                                                                'progress': '1/1',
                                                                'resources_duration': {'cpu': 0,
                                                                                       'memory': 2},
                                                                'started_at': datetime.datetime(2024, 4, 30, 22, 7, 1, tzinfo=tzutc()),
                                                                'template_name': 'flip-a-coin',
                                                                'template_scope': 'local/coin-flip-k6dcw',
                                                                'type': 'Pod'},
                                 'coin-flip-k6dcw-3956639465': {'boundary_id': 'coin-flip-k6dcw-4023156036',
                                                                'display_name': 'tails',
                                                                'finished_at': datetime.datetime(2024, 4, 30, 22, 7, 15, tzinfo=tzutc()),
                                                                'host_node_name': 'kind-control-plane',
                                                                'id': 'coin-flip-k6dcw-3956639465',
                                                                'name': 'coin-flip-k6dcw.condition-2.tails',
                                                                'outputs': {'artifacts': [{'name': 'main-logs',
                                                                                           's3': {'key': 'coin-flip-k6dcw/coin-flip-k6dcw-tails-3956639465/main.log'}}],
                                                                            'exit_code': '0'},
                                                                'phase': 'Succeeded',
                                                                'progress': '1/1',
                                                                'resources_duration': {'cpu': 0,
                                                                                       'memory': 2},
                                                                'started_at': datetime.datetime(2024, 4, 30, 22, 7, 11, tzinfo=tzutc()),
                                                                'template_name': 'tails',
                                                                'template_scope': 'local/coin-flip-k6dcw',
                                                                'type': 'Pod'},
                                 'coin-flip-k6dcw-4023156036': {'boundary_id': 'coin-flip-k6dcw',
                                                                'children': ['coin-flip-k6dcw-3956639465'],
                                                                'display_name': 'condition-2',
                                                                'finished_at': datetime.datetime(2024, 4, 30, 22, 7, 21, tzinfo=tzutc()),
                                                                'id': 'coin-flip-k6dcw-4023156036',
                                                                'name': 'coin-flip-k6dcw.condition-2',
                                                                'outbound_nodes': ['coin-flip-k6dcw-3956639465'],
                                                                'phase': 'Succeeded',
                                                                'progress': '1/1',
                                                                'resources_duration': {'cpu': 0,
                                                                                       'memory': 2},
                                                                'started_at': datetime.datetime(2024, 4, 30, 22, 7, 11, tzinfo=tzutc()),
                                                                'template_name': 'condition-2',
                                                                'template_scope': 'local/coin-flip-k6dcw',
                                                                'type': 'DAG'},
                                 'coin-flip-k6dcw-4073488893': {'boundary_id': 'coin-flip-k6dcw',
                                                                'display_name': 'condition-1',
                                                                'finished_at': datetime.datetime(2024, 4, 30, 22, 7, 11, tzinfo=tzutc()),
                                                                'id': 'coin-flip-k6dcw-4073488893',
                                                                'message': 'when '
                                                                           '\'"tails" '
                                                                           '== '
                                                                           '"heads"\' '
                                                                           'evaluated '
                                                                           'false',
                                                                'name': 'coin-flip-k6dcw.condition-1',
                                                                'node_flag': {},
                                                                'phase': 'Skipped',
                                                                'started_at': datetime.datetime(2024, 4, 30, 22, 7, 11, tzinfo=tzutc()),
                                                                'template_name': 'condition-1',
                                                                'template_scope': 'local/coin-flip-k6dcw',
                                                                'type': 'Skipped'}},
                       'phase': 'Succeeded',
                       'progress': '2/2',
                       'resources_duration': {'cpu': 0, 'memory': 4},
                       'started_at': datetime.datetime(2024, 4, 30, 22, 7, 1, tzinfo=tzutc()),
                       'task_results_completion_status': {'coin-flip-k6dcw-3053924319': True,
                                                          'coin-flip-k6dcw-3956639465': True}}},
           {'metadata': {'annotations': {'pipelines.kubeflow.org/kfp_sdk_version': '1.2.0',
                                         'pipelines.kubeflow.org/pipeline_compilation_time': '2024-04-30T23:05:19.004618',
                                         'pipelines.kubeflow.org/pipeline_spec': '{"description": '
                                                                                 '"Flip '
                                                                                 'a '
                                                                                 'coin", '
                                                                                 '"name": '
                                                                                 '"Coin-flip"}',
                                         'workflows.argoproj.io/pod-name-format': 'v2'},
                         'creation_timestamp': datetime.datetime(2024, 4, 30, 22, 5, 28, tzinfo=tzutc()),
                         'generate_name': 'coin-flip-',
                         'generation': 2,
                         'labels': {'pipelines.kubeflow.org/kfp_sdk_version': '1.2.0',
                                    'workflows.argoproj.io/completed': 'true',
                                    'workflows.argoproj.io/creator': 'system-serviceaccount-argo-argo-server',
                                    'workflows.argoproj.io/phase': 'Error'},
                         'managed_fields': [{'api_version': 'argoproj.io/v1alpha1',
                                             'fields_type': 'FieldsV1',
                                             'fields_v1': {'f:metadata': {'f:annotations': {'.': {},
                                                                                            'f:pipelines.kubeflow.org/kfp_sdk_version': {},
                                                                                            'f:pipelines.kubeflow.org/pipeline_compilation_time': {},
                                                                                            'f:pipelines.kubeflow.org/pipeline_spec': {}},
                                                                          'f:generateName': {},
                                                                          'f:labels': {'.': {},
                                                                                       'f:pipelines.kubeflow.org/kfp_sdk_version': {},
                                                                                       'f:workflows.argoproj.io/creator': {}}},
                                                           'f:spec': {}},
                                             'manager': 'argo',
                                             'operation': 'Update',
                                             'time': datetime.datetime(2024, 4, 30, 22, 5, 28, tzinfo=tzutc())},
                                            {'api_version': 'argoproj.io/v1alpha1',
                                             'fields_type': 'FieldsV1',
                                             'fields_v1': {'f:metadata': {'f:annotations': {'f:workflows.argoproj.io/pod-name-format': {}},
                                                                          'f:labels': {'f:workflows.argoproj.io/completed': {},
                                                                                       'f:workflows.argoproj.io/phase': {}}},
                                                           'f:status': {}},
                                             'manager': 'workflow-controller',
                                             'operation': 'Update',
                                             'time': datetime.datetime(2024, 4, 30, 22, 5, 28, tzinfo=tzutc())}],
                         'name': 'coin-flip-sjfx8',
                         'namespace': 'argo',
                         'resource_version': '41122',
                         'uid': '6f7dd33e-bce1-48cf-b916-dc5522ec431b'},
            'spec': {'arguments': {},
                     'entrypoint': 'coin-flip',
                     'service_account_name': 'pipeline-runner',
                     'templates': [{'dag': {'tasks': [{'arguments': {},
                                                       'dependencies': ['flip-a-coin'],
                                                       'name': 'condition-1',
                                                       'template': 'condition-1',
                                                       'when': '"{{tasks.flip-a-coin.outputs.parameters.flip-a-coin-output}}" '
                                                               '== "heads"'},
                                                      {'arguments': {},
                                                       'dependencies': ['flip-a-coin'],
                                                       'name': 'condition-2',
                                                       'template': 'condition-2',
                                                       'when': '"{{tasks.flip-a-coin.outputs.parameters.flip-a-coin-output}}" '
                                                               '== "tails"'},
                                                      {'arguments': {},
                                                       'name': 'flip-a-coin',
                                                       'template': 'flip-a-coin'}]},
                                    'inputs': {},
                                    'metadata': {},
                                    'name': 'coin-flip',
                                    'outputs': {}},
                                   {'dag': {'tasks': [{'arguments': {},
                                                       'name': 'heads',
                                                       'template': 'heads'}]},
                                    'inputs': {},
                                    'metadata': {},
                                    'name': 'condition-1',
                                    'outputs': {}},
                                   {'dag': {'tasks': [{'arguments': {},
                                                       'name': 'tails',
                                                       'template': 'tails'}]},
                                    'inputs': {},
                                    'metadata': {},
                                    'name': 'condition-2',
                                    'outputs': {}},
                                   {'container': {'command': ['python',
                                                              '-c',
                                                              '\n'
                                                              'import random\n'
                                                              'res = "heads" '
                                                              'if '
                                                              'random.randint(0, '
                                                              '1) == 0 else '
                                                              '"tails"\n'
                                                              'with '
                                                              "open('/output', "
                                                              "'w') as f:\n"
                                                              '    '
                                                              'f.write(res)        \n'
                                                              '        '],
                                                  'image': 'python:alpine3.6',
                                                  'name': '',
                                                  'resources': {}},
                                    'inputs': {},
                                    'metadata': {},
                                    'name': 'flip-a-coin',
                                    'outputs': {'artifacts': [{'name': 'flip-a-coin-output',
                                                               'path': '/output'}],
                                                'parameters': [{'name': 'flip-a-coin-output',
                                                                'value_from': {'path': '/output'}}]}},
                                   {'container': {'command': ['sh',
                                                              '-c',
                                                              'echo "it was '
                                                              'heads"'],
                                                  'image': 'alpine:3.6',
                                                  'name': '',
                                                  'resources': {}},
                                    'inputs': {},
                                    'metadata': {},
                                    'name': 'heads',
                                    'outputs': {}},
                                   {'container': {'command': ['sh',
                                                              '-c',
                                                              'echo "it was '
                                                              'tails"'],
                                                  'image': 'alpine:3.6',
                                                  'name': '',
                                                  'resources': {}},
                                    'inputs': {},
                                    'metadata': {},
                                    'name': 'tails',
                                    'outputs': {}}]},
            'status': {'artifact_gc_status': {'not_specified': True},
                       'artifact_repository_ref': {'artifact_repository': {'archive_logs': True,
                                                                           's3': {'access_key_secret': {'key': 'accesskey',
                                                                                                        'name': 'my-minio-cred'},
                                                                                  'bucket': 'my-bucket',
                                                                                  'endpoint': 'minio:9000',
                                                                                  'insecure': True,
                                                                                  'secret_key_secret': {'key': 'secretkey',
                                                                                                        'name': 'my-minio-cred'}}},
                                                   'config_map': 'artifact-repositories',
                                                   'key': 'default-v1',
                                                   'namespace': 'argo'},
                       'conditions': [{'status': 'True', 'type': 'Completed'}],
                       'finished_at': datetime.datetime(2024, 4, 30, 22, 5, 28, tzinfo=tzutc()),
                       'nodes': {'coin-flip-sjfx8': {'children': ['coin-flip-sjfx8-3733042267'],
                                                     'display_name': 'coin-flip-sjfx8',
                                                     'finished_at': datetime.datetime(2024, 4, 30, 22, 5, 28, tzinfo=tzutc()),
                                                     'id': 'coin-flip-sjfx8',
                                                     'name': 'coin-flip-sjfx8',
                                                     'outbound_nodes': ['coin-flip-sjfx8-623315825',
                                                                        'coin-flip-sjfx8-572982968'],
                                                     'phase': 'Error',
                                                     'progress': '0/1',
                                                     'started_at': datetime.datetime(2024, 4, 30, 22, 5, 28, tzinfo=tzutc()),
                                                     'template_name': 'coin-flip',
                                                     'template_scope': 'local/coin-flip-sjfx8',
                                                     'type': 'DAG'},
                                 'coin-flip-sjfx8-3733042267': {'boundary_id': 'coin-flip-sjfx8',
                                                                'children': ['coin-flip-sjfx8-623315825',
                                                                             'coin-flip-sjfx8-572982968'],
                                                                'display_name': 'flip-a-coin',
                                                                'finished_at': datetime.datetime(2024, 4, 30, 22, 5, 28, tzinfo=tzutc()),
                                                                'id': 'coin-flip-sjfx8-3733042267',
                                                                'message': 'task '
                                                                           "'coin-flip-sjfx8.flip-a-coin' "
                                                                           'errored: '
                                                                           'pods '
                                                                           '"coin-flip-sjfx8-flip-a-coin-3733042267" '
                                                                           'is '
                                                                           'forbidden: '
                                                                           'error '
                                                                           'looking '
                                                                           'up '
                                                                           'service '
                                                                           'account '
                                                                           'argo/pipeline-runner: '
                                                                           'serviceaccount '
                                                                           '"pipeline-runner" '
                                                                           'not '
                                                                           'found',
                                                                'name': 'coin-flip-sjfx8.flip-a-coin',
                                                                'phase': 'Error',
                                                                'progress': '0/1',
                                                                'started_at': datetime.datetime(2024, 4, 30, 22, 5, 28, tzinfo=tzutc()),
                                                                'template_name': 'flip-a-coin',
                                                                'template_scope': 'local/coin-flip-sjfx8',
                                                                'type': 'Pod'},
                                 'coin-flip-sjfx8-572982968': {'boundary_id': 'coin-flip-sjfx8',
                                                               'display_name': 'condition-2',
                                                               'finished_at': datetime.datetime(2024, 4, 30, 22, 5, 28, tzinfo=tzutc()),
                                                               'id': 'coin-flip-sjfx8-572982968',
                                                               'message': 'omitted: '
                                                                          'depends '
                                                                          'condition '
                                                                          'not '
                                                                          'met',
                                                               'name': 'coin-flip-sjfx8.condition-2',
                                                               'node_flag': {},
                                                               'phase': 'Omitted',
                                                               'started_at': datetime.datetime(2024, 4, 30, 22, 5, 28, tzinfo=tzutc()),
                                                               'template_name': 'condition-2',
                                                               'template_scope': 'local/coin-flip-sjfx8',
                                                               'type': 'Skipped'},
                                 'coin-flip-sjfx8-623315825': {'boundary_id': 'coin-flip-sjfx8',
                                                               'display_name': 'condition-1',
                                                               'finished_at': datetime.datetime(2024, 4, 30, 22, 5, 28, tzinfo=tzutc()),
                                                               'id': 'coin-flip-sjfx8-623315825',
                                                               'message': 'omitted: '
                                                                          'depends '
                                                                          'condition '
                                                                          'not '
                                                                          'met',
                                                               'name': 'coin-flip-sjfx8.condition-1',
                                                               'node_flag': {},
                                                               'phase': 'Omitted',
                                                               'started_at': datetime.datetime(2024, 4, 30, 22, 5, 28, tzinfo=tzutc()),
                                                               'template_name': 'condition-1',
                                                               'template_scope': 'local/coin-flip-sjfx8',
                                                               'type': 'Skipped'}},
                       'phase': 'Error',
                       'progress': '0/1',
                       'started_at': datetime.datetime(2024, 4, 30, 22, 5, 28, tzinfo=tzutc())}}],
 'metadata': {'resource_version': '53034'}}