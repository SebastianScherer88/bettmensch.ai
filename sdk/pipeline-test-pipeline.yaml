apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  generateName: pipeline-test-pipeline-
  namespace: argo
spec:
  arguments:
    parameters:
    - name: a
      value: '1'
    - name: b
      value: '2'
    - name: c
      value: '3'
  entrypoint: bettmensch-ai-dag
  templates:
  - dag:
      tasks:
      - arguments:
          parameters:
          - name: a
            value: '{{workflow.parameters.b}}'
          - name: b
            value: '{{workflow.parameters.c}}'
        depends: ''
        name: bc-0
        template: multiply
      - arguments:
          parameters:
          - name: a
            value: '{{workflow.parameters.b}}'
          - name: b
            value: '2'
        depends: ''
        name: b2-0
        template: multiply
      - arguments:
          parameters:
          - name: a
            value: '{{workflow.parameters.a}}'
          - name: b
            value: '{{tasks.bc-0.outputs.parameters.product}}'
        depends: bc-0
        name: a-plus-bc-0
        template: add
      - arguments:
          parameters:
          - name: a
            value: '{{tasks.a-plus-bc-0.outputs.parameters.sum}}'
          - name: b
            value: '{{tasks.b2-0.outputs.parameters.product}}'
        depends: a-plus-bc-0 && b2-0
        name: result-a-plus-bc-plus-2b-0
        template: add
    name: bettmensch-ai-dag
  - inputs:
      parameters:
      - name: a
      - name: b
      - default: 'null'
        name: product
    name: multiply
    outputs:
      parameters:
      - name: product
        valueFrom:
          path: product
    script:
      command:
      - python
      image: bettmensch88/bettmensch.ai:3.11-latest
      imagePullPolicy: Always
      source: |-
        import os
        import sys
        sys.path.append(os.getcwd())

        # --- preprocessing
        import json
        try: a = json.loads(r'''{{inputs.parameters.a}}''')
        except: a = r'''{{inputs.parameters.a}}'''
        try: b = json.loads(r'''{{inputs.parameters.b}}''')
        except: b = r'''{{inputs.parameters.b}}'''

        from bettmensch_ai.arguments import ComponentOutput
        product = ComponentOutput("product")

        product.assign(a * b)
  - inputs:
      parameters:
      - name: a
      - name: b
      - default: 'null'
        name: sum
    name: add
    outputs:
      parameters:
      - name: sum
        valueFrom:
          path: sum
    script:
      command:
      - python
      image: bettmensch88/bettmensch.ai:3.11-latest
      imagePullPolicy: Always
      source: |-
        import os
        import sys
        sys.path.append(os.getcwd())

        # --- preprocessing
        import json
        try: a = json.loads(r'''{{inputs.parameters.a}}''')
        except: a = r'''{{inputs.parameters.a}}'''
        try: b = json.loads(r'''{{inputs.parameters.b}}''')
        except: b = r'''{{inputs.parameters.b}}'''

        from bettmensch_ai.arguments import ComponentOutput
        sum = ComponentOutput("sum")

        sum.assign(a + b)
