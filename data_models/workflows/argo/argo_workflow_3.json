{"metadata": {"name": "pipeline-test-artifact-pipeline-jx7pb-flow-md47d", "generate_name": "pipeline-test-artifact-pipeline-jx7pb-flow-", "namespace": "argo", "uid": "e7dd825f-1f8c-4bdf-87ca-b38ae6cd773c", "resource_version": "7987", "generation": 7, "creation_timestamp": "07/12/2024", "labels": {"bettmensch.ai/pipeline-id": "e2e6b22b-4dfc-413d-ad43-f06a3b03cb92", "bettmensch.ai/pipeline-name": "pipeline-test-artifact-pipeline-jx7pb", "workflows.argoproj.io/completed": "true", "workflows.argoproj.io/creator": "system-serviceaccount-argo-argo-server", "workflows.argoproj.io/phase": "Succeeded"}, "annotations": {"karpenter.sh/do-not-disrupt": "true", "workflows.argoproj.io/pod-name-format": "v2"}, "managed_fields": [{"manager": "argo", "operation": "Update", "api_version": "argoproj.io/v1alpha1", "time": "07/12/2024", "fields_type": "FieldsV1", "fields_v1": {"f:metadata": {"f:generateName": {}, "f:labels": {".": {}, "f:bettmensch.ai/pipeline-id": {}, "f:bettmensch.ai/pipeline-name": {}, "f:workflows.argoproj.io/creator": {}}}, "f:spec": {}}}, {"manager": "workflow-controller", "operation": "Update", "api_version": "argoproj.io/v1alpha1", "time": "07/12/2024", "fields_type": "FieldsV1", "fields_v1": {"f:metadata": {"f:annotations": {".": {}, "f:karpenter.sh/do-not-disrupt": {}, "f:workflows.argoproj.io/pod-name-format": {}}, "f:labels": {"f:workflows.argoproj.io/completed": {}, "f:workflows.argoproj.io/phase": {}}}, "f:status": {}}}]}, "spec": {"arguments": {"parameters": [{"name": "a", "value": "First integration test value a"}]}, "workflow_template_ref": {"name": "pipeline-test-artifact-pipeline-jx7pb"}}, "status": {"phase": "Succeeded", "started_at": "07/12/2024", "finished_at": "07/12/2024", "progress": "2/2", "nodes": {"pipeline-test-artifact-pipeline-jx7pb-flow-md47d": {"id": "pipeline-test-artifact-pipeline-jx7pb-flow-md47d", "name": "pipeline-test-artifact-pipeline-jx7pb-flow-md47d", "type": "DAG", "display_name": "pipeline-test-artifact-pipeline-jx7pb-flow-md47d", "template_name": "bettmensch-ai-outer-dag", "template_scope": "local/", "phase": "Succeeded", "started_at": "07/12/2024", "finished_at": "07/12/2024", "progress": "2/2", "resources_duration": {"cpu": 2, "memory": 68}, "children": ["pipeline-test-artifact-pipeline-jx7pb-flow-md47d-4230836876"], "outbound_nodes": ["pipeline-test-artifact-pipeline-jx7pb-flow-md47d-1613118188"]}, "pipeline-test-artifact-pipeline-jx7pb-flow-md47d-1074722518": {"id": "pipeline-test-artifact-pipeline-jx7pb-flow-md47d-1074722518", "name": "pipeline-test-artifact-pipeline-jx7pb-flow-md47d.bettmensch-ai-inner-dag.convert-to-artifact-0(0)", "type": "Pod", "display_name": "convert-to-artifact-0(0)", "template_name": "convert-to-artifact", "template_scope": "local/", "phase": "Succeeded", "boundary_id": "pipeline-test-artifact-pipeline-jx7pb-flow-md47d-4230836876", "started_at": "07/12/2024", "finished_at": "07/12/2024", "progress": "1/1", "resources_duration": {"cpu": 1, "memory": 43}, "node_flag": {"retried": true}, "inputs": {"parameters": [{"name": "a", "value": "First integration test value a"}, {"name": "a_art", "default": "null", "value": "null"}]}, "outputs": {"artifacts": [{"name": "a_art", "path": "a_art", "s3": {"key": "argo-workflows/pipeline-test-artifact-pipeline-jx7pb-flow-md47d/pipeline-test-artifact-pipeline-jx7pb-flow-md47d-convert-to-artifact-1074722518/a_art.tgz"}}], "exit_code": "0"}, "children": ["pipeline-test-artifact-pipeline-jx7pb-flow-md47d-170779741"], "host_node_name": "ip-10-0-48-85.us-east-2.compute.internal"}, "pipeline-test-artifact-pipeline-jx7pb-flow-md47d-1613118188": {"id": "pipeline-test-artifact-pipeline-jx7pb-flow-md47d-1613118188", "name": "pipeline-test-artifact-pipeline-jx7pb-flow-md47d.bettmensch-ai-inner-dag.show-artifact-0(0)", "type": "Pod", "display_name": "show-artifact-0(0)", "template_name": "show-artifact", "template_scope": "local/", "phase": "Succeeded", "boundary_id": "pipeline-test-artifact-pipeline-jx7pb-flow-md47d-4230836876", "started_at": "07/12/2024", "finished_at": "07/12/2024", "progress": "1/1", "resources_duration": {"cpu": 1, "memory": 25}, "node_flag": {"retried": true}, "inputs": {"parameters": [{"name": "b", "default": "null", "value": "null"}], "artifacts": [{"name": "a", "path": "a", "s3": {"key": "argo-workflows/pipeline-test-artifact-pipeline-jx7pb-flow-md47d/pipeline-test-artifact-pipeline-jx7pb-flow-md47d-convert-to-artifact-1074722518/a_art.tgz"}}]}, "outputs": {"artifacts": [{"name": "b", "path": "b", "s3": {"key": "argo-workflows/pipeline-test-artifact-pipeline-jx7pb-flow-md47d/pipeline-test-artifact-pipeline-jx7pb-flow-md47d-show-artifact-1613118188/b.tgz"}}], "exit_code": "0"}, "host_node_name": "ip-10-0-49-235.us-east-2.compute.internal"}, "pipeline-test-artifact-pipeline-jx7pb-flow-md47d-170779741": {"id": "pipeline-test-artifact-pipeline-jx7pb-flow-md47d-170779741", "name": "pipeline-test-artifact-pipeline-jx7pb-flow-md47d.bettmensch-ai-inner-dag.show-artifact-0", "type": "Retry", "display_name": "show-artifact-0", "template_name": "show-artifact", "template_scope": "local/", "phase": "Succeeded", "boundary_id": "pipeline-test-artifact-pipeline-jx7pb-flow-md47d-4230836876", "started_at": "07/12/2024", "finished_at": "07/12/2024", "progress": "1/1", "resources_duration": {"cpu": 1, "memory": 25}, "inputs": {"parameters": [{"name": "b", "default": "null", "value": "null"}], "artifacts": [{"name": "a", "path": "a", "s3": {"key": "argo-workflows/pipeline-test-artifact-pipeline-jx7pb-flow-md47d/pipeline-test-artifact-pipeline-jx7pb-flow-md47d-convert-to-artifact-1074722518/a_art.tgz"}}]}, "outputs": {"artifacts": [{"name": "b", "path": "b", "s3": {"key": "argo-workflows/pipeline-test-artifact-pipeline-jx7pb-flow-md47d/pipeline-test-artifact-pipeline-jx7pb-flow-md47d-show-artifact-1613118188/b.tgz"}}], "exit_code": "0"}, "children": ["pipeline-test-artifact-pipeline-jx7pb-flow-md47d-1613118188"]}, "pipeline-test-artifact-pipeline-jx7pb-flow-md47d-1834257243": {"id": "pipeline-test-artifact-pipeline-jx7pb-flow-md47d-1834257243", "name": "pipeline-test-artifact-pipeline-jx7pb-flow-md47d.bettmensch-ai-inner-dag.convert-to-artifact-0", "type": "Retry", "display_name": "convert-to-artifact-0", "template_name": "convert-to-artifact", "template_scope": "local/", "phase": "Succeeded", "boundary_id": "pipeline-test-artifact-pipeline-jx7pb-flow-md47d-4230836876", "started_at": "07/12/2024", "finished_at": "07/12/2024", "progress": "2/2", "resources_duration": {"cpu": 2, "memory": 68}, "inputs": {"parameters": [{"name": "a", "value": "First integration test value a"}, {"name": "a_art", "default": "null", "value": "null"}]}, "outputs": {"artifacts": [{"name": "a_art", "path": "a_art", "s3": {"key": "argo-workflows/pipeline-test-artifact-pipeline-jx7pb-flow-md47d/pipeline-test-artifact-pipeline-jx7pb-flow-md47d-convert-to-artifact-1074722518/a_art.tgz"}}], "exit_code": "0"}, "children": ["pipeline-test-artifact-pipeline-jx7pb-flow-md47d-1074722518"]}, "pipeline-test-artifact-pipeline-jx7pb-flow-md47d-4230836876": {"id": "pipeline-test-artifact-pipeline-jx7pb-flow-md47d-4230836876", "name": "pipeline-test-artifact-pipeline-jx7pb-flow-md47d.bettmensch-ai-inner-dag", "type": "DAG", "display_name": "bettmensch-ai-inner-dag", "template_name": "bettmensch-ai-inner-dag", "template_scope": "local/", "phase": "Succeeded", "boundary_id": "pipeline-test-artifact-pipeline-jx7pb-flow-md47d", "started_at": "07/12/2024", "finished_at": "07/12/2024", "progress": "2/2", "resources_duration": {"cpu": 2, "memory": 68}, "inputs": {"parameters": [{"name": "a", "value": "First integration test value a"}]}, "outputs": {"artifacts": [{"name": "b", "path": "b", "s3": {"key": "argo-workflows/pipeline-test-artifact-pipeline-jx7pb-flow-md47d/pipeline-test-artifact-pipeline-jx7pb-flow-md47d-show-artifact-1613118188/b.tgz"}}]}, "children": ["pipeline-test-artifact-pipeline-jx7pb-flow-md47d-1834257243"], "outbound_nodes": ["pipeline-test-artifact-pipeline-jx7pb-flow-md47d-1613118188"]}}, "stored_templates": {"namespaced/pipeline-test-artifact-pipeline-jx7pb/bettmensch-ai-inner-dag": {"name": "bettmensch-ai-inner-dag", "inputs": {"parameters": [{"name": "a", "value": "Param A"}]}, "outputs": {"artifacts": [{"name": "b", "_from": "{{tasks.show-artifact-0.outputs.artifacts.b}}"}]}, "metadata": {}, "dag": {"tasks": [{"name": "convert-to-artifact-0", "template": "convert-to-artifact", "arguments": {"parameters": [{"name": "a", "value": "{{inputs.parameters.a}}"}]}}, {"name": "show-artifact-0", "template": "show-artifact", "arguments": {"artifacts": [{"name": "a", "_from": "{{tasks.convert-to-artifact-0.outputs.artifacts.a_art}}"}]}, "depends": "convert-to-artifact-0"}]}}, "namespaced/pipeline-test-artifact-pipeline-jx7pb/bettmensch-ai-outer-dag": {"name": "bettmensch-ai-outer-dag", "inputs": {}, "outputs": {}, "metadata": {}, "dag": {"tasks": [{"name": "bettmensch-ai-inner-dag", "template": "bettmensch-ai-inner-dag", "arguments": {"parameters": [{"name": "a", "value": "{{workflow.parameters.a}}"}]}}]}}, "namespaced/pipeline-test-artifact-pipeline-jx7pb/convert-to-artifact": {"name": "convert-to-artifact", "inputs": {"parameters": [{"name": "a"}, {"name": "a_art", "default": "null"}]}, "outputs": {"artifacts": [{"name": "a_art", "path": "a_art"}]}, "metadata": {}, "script": {"image": "bettmensch88/bettmensch.ai-standard:3.11-latest", "source": "import os\nimport sys\nsys.path.append(os.getcwd())\n\n# --- preprocessing\nimport json\ntry: a = json.loads(r'''{{inputs.parameters.a}}''')\nexcept: a = r'''{{inputs.parameters.a}}'''\n\nfrom bettmensch_ai.pipelines.io import InputParameter\n\nfrom bettmensch_ai.pipelines.io import OutputArtifact\na_art = OutputArtifact(\"a_art\")\n\ndef convert_to_artifact(a: InputParameter, a_art: OutputArtifact=None) -> None:\n    \"\"\"When decorated with the bettmensch_ai.components.component decorator,\n    implements a bettmensch_ai.Component that converts its InputParameter into\n    an OutputArtifact.\"\"\"\n    with open(a_art.path, 'w') as a_art_file:\n        a_art_file.write(str(a))\n\nconvert_to_artifact(a,a_art)\n", "name": "", "command": ["python"], "resources": {"limits": {"cpu": "100m", "memory": "100Mi"}, "requests": {"cpu": "100m", "memory": "100Mi"}}, "image_pull_policy": "Always"}, "retry_strategy": {"limit": "1", "retry_policy": "OnError"}}, "namespaced/pipeline-test-artifact-pipeline-jx7pb/show-artifact": {"name": "show-artifact", "inputs": {"parameters": [{"name": "b", "default": "null"}], "artifacts": [{"name": "a", "path": "a"}]}, "outputs": {"artifacts": [{"name": "b", "path": "b"}]}, "metadata": {}, "script": {"image": "bettmensch88/bettmensch.ai-standard:3.11-latest", "source": "import os\nimport sys\nsys.path.append(os.getcwd())\n\n# --- preprocessing\nimport json\n\nfrom bettmensch_ai.pipelines.io import InputParameter\n\nfrom bettmensch_ai.pipelines.io import InputArtifact\na = InputArtifact(\"a\")\n\nfrom bettmensch_ai.pipelines.io import OutputArtifact\nb = OutputArtifact(\"b\")\n\ndef show_artifact(a: InputArtifact, b: OutputArtifact=None) -> None:\n    \"\"\"When decorated with the bettmensch_ai.components.component decorator,\n    implements a bettmensch_ai.Component that prints the values of its\n    InputArtifact.\"\"\"\n    with open(a.path, 'r') as a_art_file:\n        a_content = a_art_file.read()\n    print(f'Content of input artifact a: {a_content}')\n    with open(b.path, 'w') as b_art_file:\n        b_art_file.write(str(a_content))\n\nshow_artifact(a,b)\n", "name": "", "command": ["python"], "resources": {"limits": {"cpu": "100m", "memory": "100Mi"}, "requests": {"cpu": "100m", "memory": "100Mi"}}, "image_pull_policy": "Always"}, "retry_strategy": {"limit": "1", "retry_policy": "OnError"}}}, "conditions": [{"type": "PodRunning", "status": "False"}, {"type": "Completed", "status": "True"}], "resources_duration": {"cpu": 2, "memory": 68}, "stored_workflow_template_spec": {"templates": [{"name": "bettmensch-ai-inner-dag", "inputs": {"parameters": [{"name": "a", "value": "Param A"}]}, "outputs": {"artifacts": [{"name": "b", "_from": "{{tasks.show-artifact-0.outputs.artifacts.b}}"}]}, "metadata": {}, "dag": {"tasks": [{"name": "convert-to-artifact-0", "template": "convert-to-artifact", "arguments": {"parameters": [{"name": "a", "value": "{{inputs.parameters.a}}"}]}}, {"name": "show-artifact-0", "template": "show-artifact", "arguments": {"artifacts": [{"name": "a", "_from": "{{tasks.convert-to-artifact-0.outputs.artifacts.a_art}}"}]}, "depends": "convert-to-artifact-0"}]}}, {"name": "convert-to-artifact", "inputs": {"parameters": [{"name": "a"}, {"name": "a_art", "default": "null"}]}, "outputs": {"artifacts": [{"name": "a_art", "path": "a_art"}]}, "metadata": {}, "script": {"image": "bettmensch88/bettmensch.ai-standard:3.11-latest", "source": "import os\nimport sys\nsys.path.append(os.getcwd())\n\n# --- preprocessing\nimport json\ntry: a = json.loads(r'''{{inputs.parameters.a}}''')\nexcept: a = r'''{{inputs.parameters.a}}'''\n\nfrom bettmensch_ai.pipelines.io import InputParameter\n\nfrom bettmensch_ai.pipelines.io import OutputArtifact\na_art = OutputArtifact(\"a_art\")\n\ndef convert_to_artifact(a: InputParameter, a_art: OutputArtifact=None) -> None:\n    \"\"\"When decorated with the bettmensch_ai.components.component decorator,\n    implements a bettmensch_ai.Component that converts its InputParameter into\n    an OutputArtifact.\"\"\"\n    with open(a_art.path, 'w') as a_art_file:\n        a_art_file.write(str(a))\n\nconvert_to_artifact(a,a_art)\n", "name": "", "command": ["python"], "resources": {"limits": {"cpu": "100m", "memory": "100Mi"}, "requests": {"cpu": "100m", "memory": "100Mi"}}, "image_pull_policy": "Always"}, "retry_strategy": {"limit": "1", "retry_policy": "OnError"}}, {"name": "show-artifact", "inputs": {"parameters": [{"name": "b", "default": "null"}], "artifacts": [{"name": "a", "path": "a"}]}, "outputs": {"artifacts": [{"name": "b", "path": "b"}]}, "metadata": {}, "script": {"image": "bettmensch88/bettmensch.ai-standard:3.11-latest", "source": "import os\nimport sys\nsys.path.append(os.getcwd())\n\n# --- preprocessing\nimport json\n\nfrom bettmensch_ai.pipelines.io import InputParameter\n\nfrom bettmensch_ai.pipelines.io import InputArtifact\na = InputArtifact(\"a\")\n\nfrom bettmensch_ai.pipelines.io import OutputArtifact\nb = OutputArtifact(\"b\")\n\ndef show_artifact(a: InputArtifact, b: OutputArtifact=None) -> None:\n    \"\"\"When decorated with the bettmensch_ai.components.component decorator,\n    implements a bettmensch_ai.Component that prints the values of its\n    InputArtifact.\"\"\"\n    with open(a.path, 'r') as a_art_file:\n        a_content = a_art_file.read()\n    print(f'Content of input artifact a: {a_content}')\n    with open(b.path, 'w') as b_art_file:\n        b_art_file.write(str(a_content))\n\nshow_artifact(a,b)\n", "name": "", "command": ["python"], "resources": {"limits": {"cpu": "100m", "memory": "100Mi"}, "requests": {"cpu": "100m", "memory": "100Mi"}}, "image_pull_policy": "Always"}, "retry_strategy": {"limit": "1", "retry_policy": "OnError"}}, {"name": "bettmensch-ai-outer-dag", "inputs": {}, "outputs": {}, "metadata": {}, "dag": {"tasks": [{"name": "bettmensch-ai-inner-dag", "template": "bettmensch-ai-inner-dag", "arguments": {"parameters": [{"name": "a", "value": "{{workflow.parameters.a}}"}]}}]}}], "entrypoint": "bettmensch-ai-outer-dag", "arguments": {"parameters": [{"name": "a", "value": "First integration test value a"}]}, "service_account_name": "argo-workflow", "workflow_template_ref": {"name": "pipeline-test-artifact-pipeline-jx7pb"}}, "artifact_repository_ref": {"config_map": "artifact-repositories", "key": "bettmensch-ai-artifact-repository", "namespace": "argo", "artifact_repository": {"s3": {"endpoint": "s3.us-east-2.amazonaws.com", "bucket": "bettmensch-ai-artifact-repository", "insecure": true, "key_format": "argo-workflows/{{workflow.name}}/{{pod.name}}"}}}, "artifact_gc_status": {"not_specified": true}, "task_results_completion_status": {"pipeline-test-artifact-pipeline-jx7pb-flow-md47d-1074722518": true, "pipeline-test-artifact-pipeline-jx7pb-flow-md47d-1613118188": true}}}