{
    "metadata": {
        "creation_timestamp": "07/12/2024",
        "generate_name": "pipeline-test-artifact-pipeline-",
        "generation": 1,
        "labels": {
            "workflows.argoproj.io/creator": "system-serviceaccount-argo-argo-server"
        },
        "managed_fields": [
            {
                "api_version": "argoproj.io/v1alpha1",
                "fields_type": "FieldsV1",
                "fields_v1": {},
                "manager": "argo",
                "operation": "Update",
                "time": "07/12/2024"
            }
        ],
        "name": "pipeline-test-artifact-pipeline-jx7pb",
        "namespace": "argo",
        "resource_version": "7515",
        "uid": "e2e6b22b-4dfc-413d-ad43-f06a3b03cb92"
    },
    "spec": {
        "arguments": {
            "parameters": [
                {
                    "name": "a",
                    "value": "Param A"
                }
            ]
        },
        "entrypoint": "bettmensch-ai-outer-dag",
        "templates": [
            {
                "dag": {
                    "tasks": [
                        {
                            "arguments": {
                                "parameters": [
                                    {
                                        "name": "a",
                                        "value": "{{inputs.parameters.a}}"
                                    }
                                ]
                            },
                            "name": "convert-to-artifact-0",
                            "template": "convert-to-artifact"
                        },
                        {
                            "arguments": {
                                "artifacts": [
                                    {
                                        "from_": "{{tasks.convert-to-artifact-0.outputs.artifacts.a_art}}",
                                        "name": "a"
                                    }
                                ]
                            },
                            "depends": "convert-to-artifact-0",
                            "name": "show-artifact-0",
                            "template": "show-artifact"
                        }
                    ]
                },
                "inputs": {
                    "parameters": [
                        {
                            "name": "a",
                            "value": "Param A"
                        }
                    ]
                },
                "metadata": {},
                "name": "bettmensch-ai-inner-dag",
                "outputs": {
                    "artifacts": [
                        {
                            "from_": "{{tasks.show-artifact-0.outputs.artifacts.b}}",
                            "name": "b"
                        }
                    ]
                }
            },
            {
                "inputs": {
                    "parameters": [
                        {
                            "name": "a"
                        },
                        {
                            "default": "null",
                            "name": "a_art"
                        }
                    ]
                },
                "metadata": {},
                "name": "convert-to-artifact",
                "outputs": {
                    "artifacts": [
                        {
                            "name": "a_art",
                            "path": "a_art"
                        }
                    ]
                },
                "retry_strategy": {
                    "limit": "1",
                    "retry_policy": "OnError"
                },
                "script": {
                    "command": [
                        "python"
                    ],
                    "image": "bettmensch88/bettmensch.ai-standard:3.11-latest",
                    "image_pull_policy": "Always",
                    "name": "",
                    "resources": {
                        "limits": {
                            "cpu": "100m",
                            "memory": "100Mi"
                        },
                        "requests": {
                            "cpu": "100m",
                            "memory": "100Mi"
                        }
                    },
                    "source": "import os\nimport sys\nsys.path.append(os.getcwd())\n\n# --- preprocessing\nimport json\ntry: a = json.loads(r'''{{inputs.parameters.a}}''')\nexcept: a = r'''{{inputs.parameters.a}}'''\n\nfrom bettmensch_ai.pipelines.io import InputParameter\n\nfrom bettmensch_ai.pipelines.io import OutputArtifact\na_art = OutputArtifact(\"a_art\")\n\ndef convert_to_artifact(a: InputParameter, a_art: OutputArtifact=None) -> None:\n    \"\"\"When decorated with the bettmensch_ai.components.component decorator,\n    implements a bettmensch_ai.Component that converts its InputParameter into\n    an OutputArtifact.\"\"\"\n    with open(a_art.path, 'w') as a_art_file:\n        a_art_file.write(str(a))\n\nconvert_to_artifact(a,a_art)\n"
                }
            },
            {
                "inputs": {
                    "artifacts": [
                        {
                            "name": "a",
                            "path": "a"
                        }
                    ],
                    "parameters": [
                        {
                            "default": "null",
                            "name": "b"
                        }
                    ]
                },
                "metadata": {},
                "name": "show-artifact",
                "outputs": {
                    "artifacts": [
                        {
                            "name": "b",
                            "path": "b"
                        }
                    ]
                },
                "retry_strategy": {
                    "limit": "1",
                    "retry_policy": "OnError"
                },
                "script": {
                    "command": [
                        "python"
                    ],
                    "image": "bettmensch88/bettmensch.ai-standard:3.11-latest",
                    "image_pull_policy": "Always",
                    "name": "",
                    "resources": {
                        "limits": {
                            "cpu": "100m",
                            "memory": "100Mi"
                        },
                        "requests": {
                            "cpu": "100m",
                            "memory": "100Mi"
                        }
                    },
                    "source": "import os\nimport sys\nsys.path.append(os.getcwd())\n\n# --- preprocessing\nimport json\n\nfrom bettmensch_ai.pipelines.io import InputParameter\n\nfrom bettmensch_ai.pipelines.io import InputArtifact\na = InputArtifact(\"a\")\n\nfrom bettmensch_ai.pipelines.io import OutputArtifact\nb = OutputArtifact(\"b\")\n\ndef show_artifact(a: InputArtifact, b: OutputArtifact=None) -> None:\n    \"\"\"When decorated with the bettmensch_ai.components.component decorator,\n    implements a bettmensch_ai.Component that prints the values of its\n    InputArtifact.\"\"\"\n    with open(a.path, 'r') as a_art_file:\n        a_content = a_art_file.read()\n    print(f'Content of input artifact a: {a_content}')\n    with open(b.path, 'w') as b_art_file:\n        b_art_file.write(str(a_content))\n\nshow_artifact(a,b)\n"
                }
            },
            {
                "dag": {
                    "tasks": [
                        {
                            "arguments": {
                                "parameters": [
                                    {
                                        "name": "a",
                                        "value": "{{workflow.parameters.a}}"
                                    }
                                ]
                            },
                            "name": "bettmensch-ai-inner-dag",
                            "template": "bettmensch-ai-inner-dag"
                        }
                    ]
                },
                "inputs": {},
                "metadata": {},
                "name": "bettmensch-ai-outer-dag",
                "outputs": {}
            }
        ]
    }
}